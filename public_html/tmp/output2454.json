{"total":17,"records":[{"recid":1,"SCRIPTID":"0","SCRIPTNAME":"ajaxSaveScript","CONTENT":"\/\/Script Saving for CDE\r\n$DEV = new CDESimple (&quot;..\/..\/..\/database\/cde.db&quot;, &quot;&quot;, &quot;&quot;, &quot;sqlite3&quot;, false, &quot;dd\/mm\/YYYY&quot;);\r\nrequire_once &quot;..\/..\/..\/cdedev.php&quot;;\r\n$cdedev = new cde_cdedev ($CDE, $_REQUEST, $outputpath=&quot;includes&quot;);\r\n$script   = new dev_script ($DEV, $_REQUEST, $cdedev, $_REQUEST[&quot;interfaceid&quot;]);\r\n$script-&gt;update_script ($_REQUEST[&quot;scriptid&quot;], $_REQUEST[&quot;edtScriptName&quot;], $_REQUEST[&quot;edtScriptCategory&quot;], $_REQUEST[&quot;edtScriptPurpose&quot;], $_REQUEST[&quot;editcode&quot;], $_REQUEST[&quot;edtScriptStatus&quot;], $moduleid=0, $_SESSION[&quot;devusername&quot;]);\r\necho date(&quot;d\/m\/Y h:i:s&quot;).&quot;{$_REQUEST[&quot;edtScriptName&quot;]} saved ....&quot;;"},{"recid":2,"SCRIPTID":"1","SCRIPTNAME":"ajaxProcessSQL","CONTENT":"if ($_REQUEST[&quot;processSQL&quot;] != &quot;execute&quot;) {\r\n\tif ($_REQUEST[&quot;metatarget&quot;] != &quot;&quot;) {\r\n\t  $metadata = explode (&quot;_-&quot;, $_REQUEST[&quot;metatarget&quot;]);\r\n\t  \r\n\t  if ($metadata[1] &amp;&amp; $metadata[2] == &quot;&quot;) {\r\n\t\t$_REQUEST[&quot;fielddata&quot;] = &quot;&quot;;\r\n\t\t$_REQUEST[&quot;tabledata&quot;] =  $metadata[1];\r\n\t\t$_REQUEST[&quot;targetdatabase&quot;] =  $metadata[0];\r\n\t  }\r\n\t  \r\n\t  if ($metadata[2] != &quot;&quot;) {\r\n\t\t$_REQUEST[&quot;fielddata&quot;] .= $metadata[2].&quot;,&quot;;\r\n\t  }\r\n\t  \r\n\t}\r\n\t\r\n\t$_REQUEST[&quot;SQL&quot;] = &quot;select &quot;.substr($_REQUEST[&quot;fielddata&quot;],0,-1).&quot; from &quot;.$_REQUEST[&quot;tabledata&quot;];\r\n}\r\n\r\n$html .= $CDE-&gt;switchid (&quot;processSQL&quot;);\r\n$html .= textarea (array(&quot;name&quot; =&gt; &quot;fielddata&quot;, &quot;style&quot; =&gt; &quot;display:none&quot;), $_REQUEST[&quot;fielddata&quot;]);\r\n$html .= textarea (array(&quot;name&quot; =&gt; &quot;tabledata&quot;, &quot;style&quot; =&gt; &quot;display:none&quot;), $_REQUEST[&quot;tabledata&quot;]);\r\n$html .= textarea (array(&quot;name&quot; =&gt; &quot;targetdatabase&quot;, &quot;style&quot; =&gt; &quot;display:none&quot;), $_REQUEST[&quot;targetdatabase&quot;]);\r\n\r\n$html .= &quot;&lt;b&gt;Execute SQL Statements&lt;\/b&gt;&lt;br&gt;&quot;;   \r\n\r\n\t\r\n\r\n$code = htmlspecialchars ($_REQUEST[&quot;SQL&quot;]);\r\n\r\n$html .= &quot;&lt;textarea id=\\&quot;SQL\\&quot; name=\\&quot;SQL\\&quot; &gt;&quot;.$code.&quot;&lt;\/textarea&gt;&quot;;\t\r\n$html .= ''&lt;script&gt; var editor = CodeMirror.fromTextArea(document.getElementById(&quot;SQL&quot;), {\r\n\t\t\theight: 800,\r\n                                      lineNumbers: true,\r\n                                      matchBrackets: true,\r\n                                      mode: &quot;text\/x-mysql&quot;,\r\n                                      indentUnit: 4,\r\n                                      indentWithTabs: true,\r\n                                      enterMode: &quot;keep&quot;,\r\n\t\t\t\t\t\t\t                        smartIndent: false,\r\n                                      tabMode: &quot;shift&quot;,\r\n                                      theme: &quot;rubyblue&quot;,\r\n\t\t\t\t\t\t\t                        onCursorActivity: function() {\r\n            \t\t\t\t\t\t\t\t\t\t\t\t\t  editor.setLineClass(hlLine, null, null);\r\n            \t\t\t\t\t\t\t\t\t\t\t\t\t  hlLine = editor.setLineClass(editor.getCursor().line, null, &quot;activeline&quot;);\r\n            \t\t\t\t\t\t\t\t\t\t\t\t  }\r\n                                    });\r\n\t\t\t\t\t\t            var hlLine = editor.setLineClass(0, &quot;activeline&quot;);\r\n                      &lt;\/script&gt;'';\r\n\r\n\/\/targetting which database\r\n$html .= input (array(&quot;type&quot; =&gt; &quot;button&quot;, &quot;style&quot; =&gt; &quot;width: 100px&quot;, &quot;onclick&quot; =&gt; &quot; document.getElementById(''SQL'').value = editor.getValue();   setprocessSQL(''execute'');   call_cdeajax(''ajaxProcessSQL'', ''content'', false)&quot;), &quot;Execute SQL&quot;);\r\n\r\nif ($_REQUEST[&quot;targetdatabase&quot;] == &quot;app&quot;) {\r\n  $TARGET = $CDE;\r\n}\r\n else {\r\n \/\/Script Saving for CDE\r\n $TARGET = new CDESimple (&quot;..\/..\/..\/database\/cde.db&quot;, &quot;&quot;, &quot;&quot;, &quot;sqlite3&quot;, false, &quot;dd\/mm\/YYYY&quot;);\r\n}\r\n$result = $TARGET-&gt;get_records ($_REQUEST[&quot;SQL&quot;]);\r\n\r\nif ($result) {\r\n\t$randomname = &quot;output&quot;.rand(1000,9999).&quot;.json&quot;;\r\n\t\r\n\tmkdir (&quot;..\/..\/..\/tmp\/&quot;, 0755, true);\r\n\tfile_put_contents (&quot;..\/..\/..\/tmp\/{$randomname}&quot;, w2ui_parse_data ($result, $TARGET-&gt;fieldinfo));\r\n\t\r\n\tforeach ($TARGET-&gt;fieldinfo as $fid =&gt; $field) {\r\n\t  $columns[] = w2ui_column ($field[&quot;name&quot;], $field[&quot;name&quot;],  $size=&quot;20&quot;, $alignment=&quot;left&quot;, $sortable=true, $resizable=true);\r\n\t}\r\n\t\r\n\t$html .= w2ui_grid ($title=&quot;Results&quot;, \r\n\t\t\t\t\t\t\t\t\t$name=&quot;resultgrid&quot;, \r\n\t\t\t\t\t\t\t\t\t$columns, \r\n\t\t\t\t\t\t\t\t\t$datapath=&quot;tmp\/&quot;.$randomname, \r\n\t\t\t\t\t\t\t\t\t$width=&quot;100%&quot;, \r\n\t\t\t\t\t\t\t\t\t$height=&quot;400px&quot;, \r\n\t\t\t\t\t\t\t\t\t$hastoolbar=true, \r\n\t\t\t\t\t\t\t\t\t$hasfooter=true, \r\n\t\t\t\t\t\t\t\t\t$multiselect=false, \r\n\t\t\t\t\t\t\t\t\t$onclick=&quot;&quot;);\r\n}\r\n  else {\r\n  $html .= $CDE-&gt;get_error();\r\n  $html .= pre (print_r ($CDE-&gt;lasterror, 1));\r\n}\r\n\r\n$html .= script (&quot;setprocessSQL(''none'');&quot;);\r\n\r\necho $html;"},{"recid":3,"SCRIPTID":"2","SCRIPTNAME":"Developerapi","CONTENT":"class dev_sql {\r\n   public $CDE;\r\n   public $DEV;\r\n   public $request;\r\n   \r\n  function __construct ($DEV, $request, $CDE, $contextprefix) {\r\n     $this-&gt;DEV = $DEV;\r\n     $this-&gt;CDE = $CDE-&gt;CDE;\r\n     $this-&gt;request = $request;       \r\n\t $this-&gt;contextprefix = $contextprefix;\r\n  }\r\n\r\n  function __toString () {\r\n    return $this-&gt;display(); \r\n  }\r\n\r\n  function get_nodes ($CDE, $prefix=&quot;&quot;) {\r\n     $database = $CDE-&gt;get_database ();\r\n\t $tablenodes = array();\r\n\t \/\/echo &quot;&lt;pre&gt;&quot;.print_r ($database, 1).&quot;&lt;\/pre&gt;&quot;;\r\n\t foreach ($database as $tablename =&gt; $columns) {\r\n\t \t$columnnodes = array();\r\n\t\tforeach ($columns as $cid =&gt; $column) {\r\n\t\t  $columnnodes[] = w2ui_sidebar_node ($prefix.&quot;_-&quot;.$tablename.&quot;_-&quot;.$column[&quot;field&quot;], $column[&quot;field&quot;] , $img=&quot;fa-star&quot;);\r\n\t\t}\r\n\t\r\n\t   $tablenodes[] = w2ui_sidebar_node ($prefix.&quot;_-&quot;.$tablename.&quot;_-&quot;, $tablename, $img=&quot;fa-star&quot;, $group=false, $expanded=false, $columnnodes); \t\r\n\t }\r\n\t \r\n\t return $tablenodes;\r\n  }\r\n\r\n\r\n  function display () {\r\n    \r\n    $appnodes = $this-&gt;get_nodes ($this-&gt;CDE, &quot;app&quot;);\t\r\n\t$devnodes = $this-&gt;get_nodes ($this-&gt;DEV, &quot;dev&quot;);\r\n\t\r\n\t$nodes[] = w2ui_sidebar_node ($name=&quot;datadb&quot;, $caption=&quot;Application Database&quot;, $img=&quot;fa-star&quot;, $group=true, $expanded=true, $appnodes); \r\n\t$nodes[] = w2ui_sidebar_node ($name=&quot;devdb&quot;, $caption=&quot;Development Database&quot;, $img=&quot;fa-star&quot;, $group=true, $expanded=true, $devnodes); \r\n\t\r\n\t$sidebar = w2ui_sidebar ($name=&quot;navsidebar&quot;, $width=&quot;300px&quot;, $height=&quot;100%&quot;, $nodes, &quot;call_cdeajax (''ajaxProcessSQL'', ''content'', false, { metatarget : event.target } );&quot;); \r\n\t\t\r\n\t$html .=  ''&lt;link rel=&quot;stylesheet&quot; href=&quot;''.$this-&gt;contextprefix.''\/codemirror\/lib\/codemirror.css&quot;&gt;\r\n\t\t\t\t\t&lt;link rel=&quot;stylesheet&quot; href=&quot;''.$this-&gt;contextprefix.''\/codemirror\/theme\/monokai.css&quot;&gt;\r\n                    &lt;script src=&quot;''.$this-&gt;contextprefix.''\/codemirror\/lib\/codemirror.js&quot;&gt;&lt;\/script&gt;\r\n\t\t\t\t\t&lt;script src=&quot;''.$this-&gt;contextprefix.''\/codemirror\/mode\/mysql\/mysql.js&quot;&gt;&lt;\/script&gt;'';\t\r\n\t\t\r\n\t$html .= div(array(&quot;style&quot; =&gt; &quot;height:800px&quot;),\r\n\t                 div(array(&quot;id&quot;=&gt;&quot;sidebar&quot;, &quot;style&quot;=&gt;&quot;float:left; width: 300px; height:100%;&quot;), $sidebar),\r\n\t\t\t\t     div(array(&quot;id&quot;=&gt;&quot;content&quot;, &quot;style&quot;=&gt;&quot;float:left; width:75%; height: 100%; margin-left:1em;&quot;) )\r\n\t\t\t\t );\r\n\t\t\t\t \r\n   \r\n\t\r\n    return $html;    \r\n  }\r\n\r\n}\r\n\r\n\r\nclass dev_release  {\r\n  public $CDE;\r\n  public $request;\r\n  public $cdedev;\r\n  public $contextprefix;\r\n  \r\n\r\n  function dev_release ($CDE, $request, $cdedev, $contextprefix) {\r\n\t  $this-&gt;CDE = $CDE;\r\n\t  $this-&gt;request = $request;\r\n      $this-&gt;cdedev = $cdedev;\t\r\n\t  $this-&gt;contextprefix = $contextprefix;\r\n     \r\n   }\t\r\n\t\r\n\tfunction __toString() {\r\n\t\treturn $this-&gt;draw();\t\r\n\t}\r\n\t\r\n\tfunction draw () {\r\n\t  $CDE = $this-&gt;CDE;\r\n\t  $request = $this-&gt;request;\r\n\t  $cdedev = $this-&gt;cdedev;\r\n\t  \r\n\t  $html = $CDE-&gt;switchid (&quot;releaseid&quot;);\r\n\t  \r\n\t  switch ($request[&quot;releaseid&quot;]) {\r\n\t    default:\r\n\t\t  if ($request[&quot;moduleprocessid&quot;] == 200) {\r\n\t\t    $html .=  &quot;&lt;b&gt; Choose Style Sheet&lt;\/b&gt;&lt;br \/&gt;&quot;;\r\n\t\t\tif ($this-&gt;request[&quot;csstype&quot;] == &quot;&quot;) {\r\n\t\t\t  $this-&gt;request[&quot;csstype&quot;] = &quot;css&quot;;\r\n\t\t\t}\r\n\t\t\t$html .= $CDE-&gt;select (&quot;csstype&quot;, 300, &quot;Choose a css type&quot;, &quot;array&quot;, &quot;css,Default|csssmpl,Smartphones (Portrait &amp; Landscape)|csssml,Smartphones(Landscape)|csssmp,Smartphones(Portrait)|cssipadpl,iPads(Portrait &amp; Landscape)|cssipadl,iPads(Landscape)|cssipadp,iPads(Portrait)|csslaptop,Desktops &amp; Laptops|csslarge,Large Screens|cssiphone,iPhone4 &amp; iPhone5&quot;, $this-&gt;request[&quot;csstype&quot;], &quot;onchange=\\&quot;document.forms[0].submit();\\&quot;&quot;).&quot;&lt;br \/&gt;&quot;;  \t  \r\n\t\t  }\r\n\t      $html .= &quot;&lt;b&gt; Choose Release &lt;\/b&gt;&lt;br \/&gt;&quot;;\r\n\t      $html .= $CDE-&gt;select (&quot;release&quot;, 140, &quot;Choose a release version&quot;, &quot;sql&quot;, &quot;select distinct release, release as data from tblscript order by release desc&quot;, $this-&gt;request[&quot;release&quot;], &quot;onchange=\\&quot;document.forms[0].submit();\\&quot;&quot;).&quot;&lt;br \/&gt;&quot;;\r\n\t     \r\n\t\t  $_REQUEST[&quot;edtOption&quot;] = 1;\r\n\t\t  \r\n\t\t  \r\n\t\t  $html .= $CDE-&gt;input(&quot;btnOption&quot;, 0, &quot;Major&quot;, &quot;&quot;, &quot;radio&quot;, &quot;1&quot;,  $event=&quot;&quot;).&quot;Major&quot;;\r\n\t      $html .= $CDE-&gt;input(&quot;btnOption&quot;, 0, &quot;Minor&quot;, &quot;&quot;, &quot;radio&quot;, &quot;2&quot;, $event=&quot; checked &quot;).&quot;Minor &lt;br \/&gt;&quot;;\r\n\t      $html .= $CDE-&gt;input(&quot;btnRelease&quot;, 110, &quot;Click here to do a release&quot;, &quot;&quot;, &quot;button&quot;, &quot;New Version&quot;, $event=&quot;onclick=\\&quot;setreleaseid(100, true);\\&quot;&quot;).&quot;&lt;br \/&gt;&quot;; \r\n\t\t  $html .= $CDE-&gt;input(&quot;btnUnRelease&quot;, 110, &quot;Click here to roll back a release&quot;, &quot;&quot;, &quot;button&quot;, &quot;Delete Version&quot;, $event=&quot;onclick=\\&quot;if (confirm(''This will perform a roll back of a release but not delete the files for the release. Continue?'')) { setreleaseid(200, true); }\\&quot;&quot;).&quot;&lt;br \/&gt;&quot;;\r\n\t\t  $html .= $CDE-&gt;input(&quot;btnMakeRelease&quot;, 110, &quot;Click here to make this the current release&quot;, &quot;&quot;, &quot;button&quot;, &quot;Make Release&quot;, $event=&quot;onclick=\\&quot;if (confirm(''This will set the version of the web application to this version. Continue?'')) { setreleaseid(300, true); }\\&quot;&quot;); \r\n\t\t \r\n\t\t  if ($request[&quot;releaseNOTE&quot;] != &quot;&quot;) {\r\n\t\t    \/\/add into the database\r\n\t\t\t $newid = $CDE-&gt;get_next_id (&quot;tblreleasenote&quot;, &quot;releasenoteid&quot;);\r\n\t\t\t $sqlinsert = &quot;insert into tblreleasenote (releasenoteid,releasenote,createdby,datecrt,release)\r\n\t                             values (?,?,?,?,?)&quot;;\r\n\t         $CDE-&gt;exec ($sqlinsert, $newid, $request[&quot;releaseNOTE&quot;],$_SESSION[&quot;devusername&quot;], date(&quot;Y-m-d H:i&quot;), $this-&gt;request[&quot;release&quot;]);\r\n\t\t  }\r\n\t\t  \r\n\t\t  $_REQUEST[&quot;releaseNOTE&quot;] = &quot;&quot;;\r\n\r\n\t\t  \/*\r\n\t\t  $html .= &quot;&lt;br&gt;&lt;b&gt;Release Notes &lt;\/b&gt;&lt;br \/&gt;&quot;;\r\n\t\t  $html .= $CDE-&gt;input(&quot;releaseNOTE&quot;, 200, &quot;Release Note&quot;, &quot;&quot;, &quot;text&quot;, &quot;&quot;, $event=&quot;&quot;);\r\n\t\t  $html .= $CDE-&gt;input(&quot;btnAddNote&quot;, 30, &quot;Click here to add a release note&quot;, &quot;&quot;, &quot;button&quot;, &quot;Add&quot;, $event=&quot;onclick=\\&quot;document.forms[0].submit();\\&quot;&quot;); \r\n\t\t  $sqlselect = &quot;select * from tblreleasenote where release = ''{$this-&gt;request[&quot;release&quot;]}'' order by datecrt desc&quot;;\r\n\t\t  $releasenotes = $CDE-&gt;get_row ($sqlselect);\r\n\t\t  \r\n\t\t  $html .= &quot;&lt;div style=\\&quot;width: 200px; overflow: auto; height: 200px;\\&quot;&gt;&quot;;\r\n\t\t  $html .= &quot;&lt;pre&gt;&quot;;\r\n\t\t  foreach ($releasenotes as $rid =&gt; $releasenote) {\r\n\t\t    $html .= &quot;{$releasenote-&gt;DATECRT}: {$releasenote-&gt;RELEASENOTE}\\n&quot;;\r\n\t\t  }\r\n\t\t  $html .= &quot;&lt;\/pre&gt;&quot;;\r\n\t\t  $html .= &quot;&lt;\/div&gt;&quot;;\r\n\t\t  \r\n\t\t  *\/\r\n\t\t  \r\n\t\t  \r\n\t\t  \r\n\t\t  \r\n\t\t \r\n\t\t  $html .= &quot;&lt;br&gt;&lt;b&gt; Search Code &lt;\/b&gt;&lt;br&gt;&quot;;\r\n\t\t  $html .= $CDE-&gt;input(&quot;srchText&quot;, 0, &quot;Search code&quot;, &quot;&quot;, &quot;text&quot;, &quot;&quot;, $event=&quot;&quot;).&quot;&lt;br&gt;&quot;;\r\n\t\t  $html .= $CDE-&gt;input(&quot;btnSearch&quot;, 110, &quot;Click here to search for some text&quot;, &quot;&quot;, &quot;button&quot;, &quot;Search&quot;, $event=&quot;onclick=\\&quot;document.forms[0].submit();\\&quot;&quot;); \r\n\t\t  $html .= &quot;&lt;div id=\\&quot;saveScript\\&quot;&gt;&lt;\/div&gt;&quot;;\r\n\t\t  \r\n\t\t  if ($request[&quot;srchText&quot;] != &quot;&quot;) {\r\n\t\t     $sqlsearch = &quot;select s.*, (select interfaceid from tblinterface where name = s.interface) as interfaceid from tblscript s where content like ''%{$request[&quot;srchText&quot;]}%'' and release = ''{$_REQUEST[&quot;release&quot;]}''&quot;;\r\n\t\t\t $result = $CDE-&gt;get_row ($sqlsearch);\r\n\t\t\t $html .= &quot;&lt;ul&gt;&quot;;\r\n\t\t\t foreach ($result as $sid =&gt; $script) {\r\n\t\t\t   \/\/get the lines with that text on\r\n\t\t\t   $content = explode (&quot;\\n&quot;, $script-&gt;CONTENT);\r\n\t\t\t   $linecount = &quot;&quot;;\r\n\t\t\t   foreach ($content as $cid =&gt; $line ) {\r\n\t\t\t     if (strpos ($line, $request[&quot;srchText&quot;]) !== false) {\r\n\t\t\t\t   $linecount .= &quot;(&quot;.($cid+1).&quot;) &quot;.htmlentities ($line).&quot;&lt;br&gt;&quot;;\r\n\t\t\t\t }\r\n\t\t\t   }\r\n\t\t\t   \r\n\t\t\t   \r\n\t\t\t   $html .= &quot;&lt;li&gt;&lt;a href=\\&quot;http:\/\/{$_SERVER[&quot;HTTP_HOST&quot;]}\/?release={$_REQUEST[&quot;release&quot;]}&amp;interface=Developer&amp;interfaceid={$script-&gt;INTERFACEID}&amp;scriptid={$script-&gt;SCRIPTID}&amp;scriptprocessid=110{$extra}\\&quot; target=\\&quot;_blank\\&quot;&gt;{$script-&gt;SCRIPTNAME} {$script-&gt;INTERFACE} {$script-&gt;CATEGORY}&lt;\/a&gt;&lt;br&gt;{$linecount}&lt;\/li&gt;&quot;;\r\n\t\t\t }\r\n\t\t\t $html .= &quot;&lt;\/ul&gt;&quot;;\r\n\t\t  }\r\n\t\t  \r\n\t\t  $html .=  &quot;&lt;br&gt;&quot;;\r\n\t\t  \r\n\r\n\t\t  \r\n\t\tbreak;\r\n\t\tcase 100:\r\n\t\t   $release = $cdedev-&gt;do_release ($request[&quot;btnOption&quot;] != 1); \r\n\t\t   $html .= &quot;&lt;script&gt; window.alert (''$release has been created.''); setreleaseid (0, true); &lt;\/script&gt;&quot;;\r\n\t\tbreak;\r\n\t\tcase 200:\r\n\t\t  if ($request[&quot;release&quot;] != &quot;v1.0.0.0&quot;) {\r\n\t\t    $CDE-&gt;exec (&quot;delete from tblscript where release = ''{$request[&quot;release&quot;]}''&quot;);\r\n\t\t\t$html .= &quot;&lt;script&gt; window.alert (''{$request[&quot;release&quot;]} has been removed.''); setreleaseid (0, true); &lt;\/script&gt;&quot;;\r\n\t\t  }\r\n\t\t    else {\r\n\t\t\t $html .= &quot;&lt;script&gt; window.alert (''Cannot roll back a core release !''); setreleaseid (0, true); &lt;\/script&gt;&quot;;\r\n\t\t  }\r\n\t\tbreak;\r\n\t\tcase 300:\r\n\t\t   $release = substr($request[&quot;release&quot;], 1);\r\n\t\t   file_put_contents (&quot;release.inc&quot;, $release);\r\n\t\t   $html .= &quot;&lt;script&gt; window.alert (''{$request[&quot;release&quot;]} is now current !''); setreleaseid (0, true); &lt;\/script&gt;&quot;;\r\n\t\tbreak;\r\n\t  }\r\n\t  return $html;\r\n\t}\r\n\r\n}\r\n\r\n\/*\r\nScript Name: CDE Developer Script\r\nPurpose:\r\nThis script makes the development happen\r\nCreated By: Andre van Zuydam\r\nCreated Date: \r\n*\/\r\n\r\nclass dev_script {\r\n  public $CDE;\r\n  public $request;\r\n  public $cdedev;\r\n  public $interfaceid;\r\n  \r\n  function dev_script ($CDE, $request, $cdedev, $interfaceid, $contextprefix) {\r\n\t  $this-&gt;CDE = $CDE;\r\n\t  $this-&gt;request = $request;\r\n      $this-&gt;cdedev = $cdedev;\t\r\n      $this-&gt;interfaceid = $interfaceid;\r\n\t  $this-&gt;contextprefix = $contextprefix;\r\n   }\t\r\n\t\r\n\tfunction __toString() {\r\n\t\treturn $this-&gt;draw();\t\r\n\t}\r\n\t\r\n\tfunction insert_script ($scriptname, $content, $interface, $scripttype, $release, $createdby, $purpose=&quot;&quot;, $moduleid=0) {\r\n    $DEV = $this-&gt;cdedev-&gt;DEV;\r\n    $version = &quot;1.0.0.0&quot;;\r\n    \r\n    $scriptid = $DEV-&gt;get_next_id (&quot;tblscript&quot;, &quot;scriptid&quot;);\r\n    if ($scriptname == &quot;&quot;) $scriptname = &quot;New&quot;.$scriptid;\r\n    $sqlinsert = &quot;insert into tblscript (scriptid, scriptname, content, interface, scripttype, release, createdby, purpose, moduleid, version, status, datecrt)\r\n                                 values (?       , ?         , ?      , ?        , ?         , ?      , ?        , ?      , ?,        ?,       ?, ''now'')&quot;;\r\n    \r\n    $DEV-&gt;exec ($sqlinsert, $scriptid, $scriptname, $content, $interface, $scripttype, $release, $createdby, $purpose=&quot;&quot;, $moduleid=0, $version, 0);\r\n  \r\n    return $scriptid;\r\n  }\r\n  \r\n  function check_code ($code, $root, $outputpath, $hostname) {\r\n      $result = true;\r\n      $filename = &quot;check&quot;.rand(1000, 9999).&quot;.php&quot;;\r\n      $testname = $root.&quot;\/&quot;.$outputpath.&quot;\/&quot;.$filename;\r\n      \r\n      file_put_contents ($testname, $code);\r\n      \r\n\t  \r\n      $error = file_get_contents (&quot;http:\/\/&quot;.$hostname.&quot;\/&quot;.$outputpath.&quot;\/&quot;.$filename);     \r\n      \r\n\t\r\n      if (strpos ($error, &quot;Parse error&quot;) !== false) {\r\n        $result = false;\r\n       echo &quot;&lt;script&gt; window.alert (''&quot;. addslashes(str_replace (&quot;\\n&quot;, &quot;&quot;, strip_tags($error))).&quot;''); &lt;\/script&gt;&quot;;\r\n      } \r\n      unlink ($testname);\r\n      return $result;\r\n    }\r\n  \t\r\n  \r\n  \r\n  function update_script ($scriptid, $scriptname, $scriptcategory, $purpose, $content, $status, $moduleid, $lastuser, $deletefile=true, $removelock=true) {\r\n    $DEV = $this-&gt;cdedev-&gt;DEV;\r\n    $request = $this-&gt;request;\r\n\t\r\n\t\r\n    if ($scriptid == &quot;&quot;) {\r\n      $interface = $DEV-&gt;get_value (0, &quot;select * from tblinterface where interfaceid = {$this-&gt;interfaceid}&quot;);\r\n      if ($request[&quot;moduleprocessid&quot;] == 100) {\r\n        $scriptname = $interface-&gt;NAME;\r\n        $interfacename = $interface-&gt;NAME;\r\n        $scripttype = &quot;interface&quot;;\r\n      }\r\n        else \r\n      if ($request[&quot;moduleprocessid&quot;] == 200) {  \r\n        $scriptname = $interface-&gt;NAME.$request[&quot;csstype&quot;];\r\n        $interfacename = $interface-&gt;NAME;\r\n        $scripttype = &quot;css&quot;;  \r\n      }\r\n      $release = $request[&quot;release&quot;];\r\n      $scriptid = $this-&gt;insert_script ($scriptname, $content, $interfacename, $scripttype, $release, $_SESSION[&quot;devusername&quot;], $purpose=&quot;&quot;, $moduleid=0);\r\n   }\r\n    \/\/$content = str_replace (&quot;''&quot;, &quot;\\''&quot;, $content);\r\n\t\r\n    $script = $DEV-&gt;get_value (0, &quot;select scriptname, scripttype, release, interface, status, version  from tblscript where scriptid = {$scriptid}&quot;);\r\n\t\r\n\t\/\/add this script into the tblrevision\r\n\t$sqlrevision = &quot;insert into tblrevision (scriptid, scriptname, purpose, interface, version, release, content, scripttype, status, createdby, editedby, lastuser, datemod, datecrt, moduleid) \r\n\t                     select scriptid, scriptname, purpose, interface, version, release, content, scripttype, status, createdby, editedby, lastuser, datemod, datecrt, moduleid \r\n\t\t\t\t\t\t from tblscript where scriptid = {$scriptid}&quot;;\r\n\t$DEV-&gt;exec ($sqlrevision);\r\n\t\r\n\t\r\n\t$sqldelrevision = &quot;delete from tblrevision where scriptid = {$scriptid} and version not in (\r\n                             select version from tblrevision where scriptid = {$scriptid} order by version desc limit 30)&quot;;\r\n\t\r\n\t$DEV-&gt;exec ($sqldelrevision);\r\n\t\r\n    $version = $script-&gt;VERSION;\r\n\t\r\n\t\/\/fix this code here - very bad\r\n\t$noincrement = false;\r\n\t$version = explode (&quot;.&quot;, $version);\r\n\tforeach ($version as $vid =&gt; $ver) {\r\n\t  if ($vid &gt; 0) {\r\n\t    if ($ver == 9) {\r\n\t\t  $version[$vid] = 0;\r\n\t\t  $version[$vid-1]++;\r\n\t\t  $noincrement = true;\r\n\t\t}\r\n\t  }\r\n\t}\r\n\t\r\n\t$version = $version[0].&quot;.&quot;.$version[1].&quot;.&quot;.$version[2].&quot;.&quot;.$version[3];\r\n\tif (!$noincrement) $version++;\r\n\t\r\n\t\r\n    $sqlupdate = &quot;update tblscript set scriptname = ?, scriptcategory = ?, purpose = ?, content = ?, status = ?, moduleid = ?, editedby = '''', lastuser = ?, version = ?, datemod = ''now''\r\n                         where scriptid = ?&quot;;\r\n              \r\n    $DEV-&gt;exec($sqlupdate, $scriptname, $scriptcategory, $purpose, $content, $status, $moduleid, $lastuser, $version, $scriptid);   \r\n\t\r\n\tif ($removelock) {\r\n\t  $DEV-&gt;exec (&quot;delete from lnkscript_user where scriptid = ?&quot;, $scriptid);\t\r\n\t}\r\n\t\r\n    \r\n    if ($deletefile &amp;&amp; $content != &quot;&quot;) {\r\n     \r\n\t $script = $DEV-&gt;get_value (0, &quot;select scriptname, scripttype, release, interface, status  from tblscript where scriptid = {$scriptid}&quot;);\r\n      if ($script-&gt;SCRIPTTYPE == &quot;interface&quot;) {\r\n        $scriptfilename = $this-&gt;cdedev-&gt;root.&quot;\/&quot;.$this-&gt;cdedev-&gt;outputpath.&quot;\/&quot;.$script-&gt;RELEASE.&quot;\/&quot;.$script-&gt;SCRIPTNAME.&quot;.php&quot;; \r\n      }\r\n        else \r\n      if ($script-&gt;SCRIPTTYPE == &quot;css&quot;) {\r\n         $scriptfilename = $this-&gt;cdedev-&gt;root.&quot;\/&quot;.$this-&gt;cdedev-&gt;outputpath.&quot;\/&quot;.$script-&gt;RELEASE.&quot;\/css\/&quot;.$script-&gt;INTERFACE.&quot;css.css&quot;; \r\n      }\r\n        else \r\n      if ($script-&gt;SCRIPTTYPE == &quot;api&quot; || $script-&gt;SCRIPTTYPE == &quot;global&quot;) {\r\n\t    \r\n\t\tif ($script-&gt;SCRIPTTYPE == &quot;global&quot; &amp;&amp; $script-&gt;STATUS == 1) {\r\n\t\t  $scriptfilename = $this-&gt;cdedev-&gt;root.&quot;\/&quot;.$this-&gt;cdedev-&gt;outputpath.&quot;\/&quot;.$script-&gt;RELEASE.&quot;\/functions.php&quot;;\r\n\t\t}\r\n\t\t else\r\n\t\tif ($script-&gt;STATUS == 1) {\r\n           $scriptfilename = $this-&gt;cdedev-&gt;root.&quot;\/&quot;.$this-&gt;cdedev-&gt;outputpath.&quot;\/&quot;.$script-&gt;RELEASE.&quot;\/&quot;.$script-&gt;INTERFACE.&quot;api.php&quot;;      \r\n        }\r\n\t\t  else {\r\n\t\t  $scriptfilename = $this-&gt;cdedev-&gt;root.&quot;\/&quot;.$this-&gt;cdedev-&gt;outputpath.&quot;\/&quot;.$script-&gt;RELEASE.&quot;\/ajax\/&quot;.$script-&gt;SCRIPTNAME.&quot;.php&quot;;      \r\n\t\t}  \r\n\t  } \r\n\t \r\n\t if ($script-&gt;SCRIPTTYPE == &quot;css&quot;) {\r\n\t    \/\/echo &quot;updating $scriptfilename&quot;;\r\n\t\t$this-&gt;cdedev-&gt;ainterface-&gt;get_css ($script-&gt;INTERFACE, $this-&gt;cdedev-&gt;root, $this-&gt;cdedev-&gt;outputpath, $this-&gt;cdedev-&gt;hostname);\r\n\t\t\r\n\t }\r\n\t   else {\r\n\t\t $apicontent = &quot;&quot;;\r\n\t\t if ($script-&gt;STATUS == 0 &amp;&amp; $script-&gt;SCRIPTTYPE != &quot;interface&quot;) {\r\n\t\t   $code = $content;\r\n\t\t   $content = &quot;\/*\\nScript Name: {$script-&gt;SCRIPTNAME}\\n&quot;;\r\n           $content .= &quot;Purpose:\\n{$script-&gt;PURPOSE}\\n&quot;;\r\n           $content .= &quot;Created By: {$script-&gt;CREATEDBY}\\n&quot;;\r\n           $content .= &quot;Created Date: {$script-&gt;DATECRT}\\n&quot;;\r\n           $content .= &quot;*\/\\n&quot;;\r\n           $content .= &quot;require_once (''&quot;.$this-&gt;cdedev-&gt;root.&quot;\/cdesimple.php'');\\n&quot;;\r\n           $content .= &quot;require_once (''&quot;.$this-&gt;cdedev-&gt;root.&quot;\/connection.php'');\\n&quot;;\r\n\t\t   $content .= &quot;require_once (''&quot;.$this-&gt;cdedev-&gt;root.&quot;\/shape.php'');\\n&quot;;\r\n           $content .= &quot;if (file_exists(''&quot;.$this-&gt;cdedev-&gt;root.&quot;\/&quot;.$this-&gt;cdedev-&gt;outputpath.&quot;\/&quot;.$script-&gt;RELEASE.&quot;\/functions.php'')) {\\n  require_once (''&quot;.$this-&gt;cdedev-&gt;root.&quot;\/&quot;.$this-&gt;cdedev-&gt;outputpath.&quot;\/&quot;.$script-&gt;RELEASE.&quot;\/functions.php'');\\n}\\n&quot;;\r\n           $content .= &quot;if (file_exists(''&quot;.$this-&gt;cdedev-&gt;root.&quot;\/&quot;.$this-&gt;cdedev-&gt;outputpath.&quot;\/&quot;.$script-&gt;RELEASE.&quot;\/{$script-&gt;INTERFACE}api.php'')) { require_once (''&quot;.$this-&gt;cdedev-&gt;root.&quot;\/&quot;.$this-&gt;cdedev-&gt;outputpath.&quot;\/&quot;.$script-&gt;RELEASE.&quot;\/{$script-&gt;INTERFACE}api.php''); }\\n\\n&quot;;\r\n           $content .= ''session_name($_CDEDEV_SESSION_NAME);''.&quot;\\n&quot;;\r\n           $content .= ''session_start();''.&quot;\\n&quot;;\r\n\t\t   $content .= ''$_REQUEST[&quot;ajaxscriptname&quot;] = &quot;''.$script-&gt;SCRIPTNAME.''&quot;;''.&quot;\\n&quot;;\r\n\t\t   $content .= $code.&quot;\\n&quot;; \r\n\t\t   $content = ''&lt;?''.''php''.&quot;\\n&quot;.$content.&quot;\\n&quot;.''?''.''&gt;'';\r\n\t\t   $code = $content;\r\n         }\r\n\t\t   else \r\n\t\t if ($script-&gt;STATUS == 1 &amp;&amp; $script-&gt;SCRIPTTYPE != &quot;interface&quot;)  {\r\n\t\t    \/\/we need to recreate the whole api file\r\n\t\t\t$code =  ''&lt;?''.''php''.&quot;\\n&quot;.$content.&quot;\\n&quot;.''?''.''&gt;'';\r\n\t\t\t$sqlapi = &quot;select * from tblscript where interface = ''{$script-&gt;INTERFACE}'' and release = ''{$script-&gt;RELEASE}'' and scripttype in (''api'', ''global'')  and scriptid &lt;&gt; {$scriptid} and status = 1&quot;;\r\n\t\t\t\/\/error_log ($sqlapi);\r\n\t\t\t$apis = $DEV-&gt;get_row ($sqlapi);\r\n\t\t\t\/\/current script\r\n\t\t\t\r\n\t\t\t$apicontent = &quot;\/*\\nScript Name: {$script-&gt;SCRIPTNAME}\\n&quot;;\r\n            $apicontent .= &quot;Purpose:\\n{$script-&gt;PURPOSE}\\n&quot;;\r\n            $apicontent .= &quot;Created By: {$script-&gt;CREATEDBY}\\n&quot;;\r\n            $apicontent .= &quot;Created Date: {$script-&gt;DATECRT}\\n&quot;;\r\n            $apicontent .= &quot;*\/\\n&quot;;\r\n\t\t    $apicontent .= $content.&quot;\\n&quot;;\r\n\t\t\t\r\n\t\t\tforeach ($apis as $apiid =&gt; $api) {\r\n\t\t\t  $apicontent .= &quot;\/*\\nScript Name: {$api-&gt;SCRIPTNAME}\\n&quot;;\r\n              $apicontent .= &quot;Purpose:\\n{$api-&gt;PURPOSE}\\n&quot;;\r\n              $apicontent .= &quot;Created By: {$api-&gt;CREATEDBY}\\n&quot;;\r\n              $apicontent .= &quot;Created Date: {$api-&gt;DATECRT}\\n&quot;;\r\n              $apicontent .= &quot;*\/\\n&quot;;\r\n\t\t\t  $content = str_replace (&quot;''''&quot;, &quot;''&quot;, $api-&gt;CONTENT);\r\n              $apicontent .= $content.&quot;\\n&quot;;\r\n     \t\t}\r\n\t\t\t\r\n\t\t\t\r\n\t\t }\r\n\t\t   else {\r\n\t\t   $code =  ''&lt;?''.''php''.&quot;\\n&quot;.$content.&quot;\\n&quot;.''?''.''&gt;''; \r\n\t\t }  \r\n\t\t \t\t \t\t \r\n\t\t if ($this-&gt;check_code ($code, $this-&gt;cdedev-&gt;root,$this-&gt;cdedev-&gt;outputpath, $this-&gt;cdedev-&gt;hostname) ) {\r\n\t\t     unlink ($scriptfilename);  \r\n\t\t\t \/\/output the new code\r\n\t\t\t if (($script-&gt;STATUS == 0 || $script-&gt;STATUS == 1) &amp;&amp; $script-&gt;SCRIPTTYPE != &quot;interface&quot;) {\r\n\t\t\t   \r\n\t\t\t   if ($script-&gt;STATUS == 0) {\r\n\t\t\t     file_put_contents ($scriptfilename, $content);\r\n\t\t\t   }\r\n\t\t\t     else {\r\n\t\t\t\t  \r\n\t\t\t\t if ($script-&gt;INTERFACE != &quot;Developer&quot;) { \r\n\t\t\t\t   $apicontent = ''&lt;?''.''php''.&quot;\\n&quot;.$apicontent.&quot;\\n&quot;.''?''.''&gt;'';\r\n\t\t\t\t   file_put_contents ($scriptfilename, $apicontent);\r\n\t\t\t\t }\r\n\t\t\t\t \/\/error_log ($scriptfilename);\r\n\t\t\t   }\t \r\n\t\t\t }  \r\n\t\t } \r\n\t }\r\n\t\r\n\t  \r\n    }\r\n           \r\n    return true;\r\n  }\r\n  \r\n  function get_script ($scriptname, $interface, $release, $editedby=&quot;&quot;, $setid=true, $version=&quot;&quot;) {\r\n    $DEV = $this-&gt;cdedev-&gt;DEV;\r\n\t\r\n\tif ($version == &quot;&quot;) {\r\n      $sqlscript = &quot;select * from tblscript where scriptname = ''{$scriptname}'' and interface = ''{$interface}'' and release = ''{$release}''&quot;;\r\n    }\r\n\t  else {\r\n\t  $sqlscript = &quot;select * from tblrevision where scriptname = ''{$scriptname}'' and interface = ''{$interface}'' and release = ''{$release}'' and version = ''{$version}''&quot;; \r\n\t}  \r\n\t\r\n\t$content = $DEV-&gt;get_value (0, $sqlscript);\r\n    if ($setid) {\r\n      $this-&gt;scriptid = $content-&gt;SCRIPTID;\r\n    }\r\n    $content = $content-&gt;CONTENT;  \r\n    $content = str_replace (&quot;''''&quot;, &quot;''&quot;, $content);\r\n    \r\n    return $content;\r\n  }\r\n  \r\n  function delete_script ($scriptid) {\r\n    $DEV = $this-&gt;cdedev-&gt;DEV;\r\n\t\r\n\t$script = $DEV-&gt;get_value (0, &quot;select scriptname, scripttype, release, interface  from tblscript where scriptid = {$scriptid}&quot;);\r\n    if ($script-&gt;SCRIPTTYPE == &quot;interface&quot;) {\r\n        $scriptfilename = $this-&gt;cdedev-&gt;root.&quot;\/&quot;.$this-&gt;cdedev-&gt;outputpath.&quot;\/&quot;.$script-&gt;RELEASE.&quot;\/&quot;.$script-&gt;SCRIPTNAME.&quot;.php&quot;; \r\n      }\r\n        else \r\n    if ($script-&gt;SCRIPTTYPE == &quot;css&quot;) {\r\n       $scriptfilename = $this-&gt;cdedev-&gt;root.&quot;\/&quot;.$this-&gt;cdedev-&gt;outputpath.&quot;\/&quot;.$script-&gt;RELEASE.&quot;\/css\/&quot;.$script-&gt;SCRIPTNAME.&quot;.css&quot;; \r\n    }\r\n        else \r\n    if ($script-&gt;SCRIPTTYPE == &quot;api&quot;) {\r\n       $scriptfilename = $this-&gt;cdedev-&gt;root.&quot;\/&quot;.$this-&gt;cdedev-&gt;outputpath.&quot;\/&quot;.$script-&gt;RELEASE.&quot;\/&quot;.$script-&gt;INTERFACE.&quot;api.php&quot;;      \r\n    } \r\n    unlink ($scriptfilename);   \r\n\t\r\n    $sqldelete = &quot;delete from tblscript where scriptid = {$scriptid} &quot;;\r\n\t$DEV-&gt;exec ($sqldelete);\r\n\t\r\n    return true;\r\n  }\r\n  \r\n  function show_script ($scriptname, $interface, $release, $showtype=&quot;php&quot;, $editedby) {\r\n\t\t$request = $this-&gt;request;\r\n\t\t$cdedev = $this-&gt;cdedev;\r\n\t\t$DEV = $this-&gt;cdedev-&gt;DEV;\r\n\t\t$script = $DEV-&gt;get_value (0, &quot;select * from tblscript where scriptname = ''{$scriptname}'' and interface = ''{$interface}'' and release = ''{$release}'' &quot;);\r\n    \r\n    $request[&quot;editcode&quot;] = &quot;&quot;;\r\n    \r\n    if ($showtype == &quot;php&quot;) {           \r\n      $html .=  ''\r\n\t\t\t\t\t\t\t&lt;link rel=&quot;stylesheet&quot; href=&quot;''.$this-&gt;contextprefix.''\/codemirror\/addon\/fold\/foldgutter.css&quot; \/&gt;\r\n\t\t\t\t\t\t\t&lt;script src=&quot;''.$this-&gt;contextprefix.''\/codemirror\/addon\/fold\/foldcode.js&quot;&gt;&lt;\/script&gt;\r\n\t\t\t\t\t\t\t&lt;script src=&quot;''.$this-&gt;contextprefix.''\/codemirror\/addon\/fold\/foldgutter.js&quot;&gt;&lt;\/script&gt;\r\n\t\t\t\t\t\t\t &lt;script src=&quot;''.$this-&gt;contextprefix.''\/codemirror\/addon\/fold\/brace-fold.js&quot;&gt;&lt;\/script&gt;\r\n\t\t\t\t\t\t\t &lt;script src=&quot;''.$this-&gt;contextprefix.''\/codemirror\/addon\/fold\/xml-fold.js&quot;&gt;&lt;\/script&gt;\r\n\t\t\t\t\t\t\t &lt;script src=&quot;''.$this-&gt;contextprefix.''\/codemirror\/addon\/fold\/markdown-fold.js&quot;&gt;&lt;\/script&gt;\r\n\t\t\t\t\t\t\t &lt;script src=&quot;''.$this-&gt;contextprefix.''\/codemirror\/addon\/fold\/comment-fold.js&quot;&gt;&lt;\/script&gt;\r\n\t  \t\t\t\t\t\t &lt;script src=&quot;''.$this-&gt;contextprefix.''\/codemirror\/mode\/xml\/xml.js&quot;&gt;&lt;\/script&gt;\r\n\t\t\t\t\t\t\t &lt;script src=&quot;''.$this-&gt;contextprefix.''\/codemirror\/mode\/javascript\/javascript.js&quot;&gt;&lt;\/script&gt;\r\n\t\t\t\t\t\t\t &lt;script src=&quot;''.$this-&gt;contextprefix.''\/codemirror\/mode\/css\/css.js&quot;&gt;&lt;\/script&gt;\r\n\t\t\t\t\t\t\t &lt;script src=&quot;''.$this-&gt;contextprefix.''\/codemirror\/mode\/clike\/clike.js&quot;&gt;&lt;\/script&gt;\r\n\t\t\t\t\t\t\t &lt;script src=&quot;''.$this-&gt;contextprefix.''\/codemirror\/mode\/php\/php.js&quot;&gt;&lt;\/script&gt;'';\r\n\t\t  $mode = &quot;text\/x-php&quot;;\r\n\t\t}\r\n\t\t else\r\n\t\tif ($showtype == &quot;css&quot;) {\r\n\t\t  $html .=  ''&lt;script src=&quot;''.$this-&gt;contextprefix.''\/codemirror\/mode\/css\/css.js&quot;&gt;&lt;\/script&gt;'';\r\n      $mode = &quot;text\/css&quot;; \r\n    }\r\n\r\n    \r\n    $_REQUEST[&quot;editcode&quot;] = &quot;&quot;;\r\n    $html .= &quot;&lt;table class=\\&quot;dataform\\&quot; style=\\&quot;width: 100%;\\&quot;&gt;&quot;;\r\n\t$_REQUEST[&quot;edtScriptName&quot;] = $script-&gt;SCRIPTNAME;\r\n\t$_REQUEST[&quot;edtScriptCategory&quot;] = $script-&gt;SCRIPTCATEGORY;\r\n\t$_REQUEST[&quot;edtScriptPurpose&quot;] = $script-&gt;PURPOSE;\r\n\t\r\n\tif ($script-&gt;SCRIPTTYPE == &quot;api&quot; || $script-&gt;SCRIPTTYPE == &quot;global&quot;) {\r\n\t  \r\n\t  $html .= &quot;&lt;tr&gt;&lt;td&gt;Script Name ({$script-&gt;SCRIPTID}) &quot;.$DEV-&gt;input(&quot;edtScriptName&quot;,  $width=200, $alttext=&quot;Type in the name of the script&quot;, $compulsory=&quot;&quot;, $inputtype=&quot;text&quot;).&quot; Category &quot;.$DEV-&gt;input(&quot;edtScriptCategory&quot;,  $width=200, $alttext=&quot;Type in the name of the script category&quot;, $compulsory=&quot;&quot;, $inputtype=&quot;text&quot;).\r\n\t  &quot; Script Type &quot;.$DEV-&gt;select (&quot;edtScriptStatus&quot;, 140,  &quot;Choose Script Status&quot;, &quot;array&quot;, &quot;0,AJAX|1,Include|2,Daemon&quot;, $script-&gt;STATUS).&quot; &quot;.$DEV-&gt;select (&quot;chooseVersion&quot;, 140, &quot;Choose a version&quot;, &quot;sql&quot;, &quot;select distinct version, version||'' ''||datemod||'' ''||lastuser as data from tblrevision where scriptid = {$script-&gt;SCRIPTID} order by version desc&quot;, &quot;&quot;, &quot;onchange=\\&quot;document.forms[0].submit();\\&quot;&quot;).&quot;&lt;\/td&gt;&lt;\/tr&gt;&quot;;\r\n\t  \r\n\t  $sqlinsert = &quot;insert into lnkscript_user (userid, scriptid, release, sessionid)\r\n                      values (?, ?, ?, ?)&quot;;\r\n\t\r\n\t  $DEV-&gt;exec ($sqlinsert, $_SESSION[&quot;devuserid&quot;], $script-&gt;SCRIPTID, $script-&gt;RELEASE, session_id());\r\n\t \r\n\t  \/\/check who else is working on this script\r\n\t   \r\n\t  $working = $DEV-&gt;get_row (&quot;select * from tbluser where sessionid in (select sessionid from lnkscript_user where scriptid = {$script-&gt;SCRIPTID}) and userid &lt;&gt; {$_SESSION[&quot;devuserid&quot;]}&quot;);\r\n\t  \r\n\t  $workhtml = &quot;&quot;;\r\n\t  foreach ($working as $wid =&gt; $workuser) {\r\n\t    $workhtml .= &quot;&lt;span style=\\&quot;color: red; font-weight:bold\\&quot;&gt;{$workuser-&gt;NAME}&lt;\/span&gt;&quot;;\r\n\t  }\r\n\t  \r\n\t  $html .= &quot;&lt;tr&gt;&lt;td&gt;Purpose, Edited Currently by: {$workhtml}&lt;\/td&gt;&lt;\/tr&gt;&quot;;\r\n\t  $html .= &quot;&lt;tr&gt;&lt;td&gt;&lt;textarea style=\\&quot;width:94%\\&quot; name=\\&quot;edtScriptPurpose\\&quot; cols=\\&quot;10\\&quot;&gt;{$_REQUEST[&quot;edtScriptPurpose&quot;]}&lt;\/textarea&gt;&lt;\/td&gt;&lt;\/tr&gt;&quot;;\r\n\t  \/\/$html .= &quot; &lt;tr&gt;&lt;td&gt;&lt;\/td&gt;&lt;\/tr&gt;&quot;;\r\n\t\r\n\t}\r\n\t  else {\r\n\t  $html .= &quot;&lt;tr&gt;&lt;td&gt;Previous Versions: &quot;.$DEV-&gt;select (&quot;chooseVersion&quot;, 140, &quot;Choose a version&quot;, &quot;sql&quot;, &quot;select distinct version, version||'' ''||datemod as data from tblrevision where scriptid = {$script-&gt;SCRIPTID} order by version desc&quot;, &quot;&quot;, &quot;onchange=\\&quot;document.forms[0].submit();\\&quot;&quot;).&quot;&lt;\/td&gt;&lt;\/tr&gt;&quot;;\r\n\t  $html .= $DEV-&gt;input(&quot;edtScriptName&quot;,  $width=200, $alttext=&quot;&quot;, $compulsory=&quot;&quot;, $inputtype=&quot;hidden&quot;);\r\n\t  $html .= $DEV-&gt;input(&quot;edtScriptPurpose&quot;,  $width=200, $alttext=&quot;&quot;, $compulsory=&quot;&quot;, $inputtype=&quot;hidden&quot;);\r\n\t   \r\n\t}\r\n\t\r\n\t\/\/$html .= &quot;&lt;tr&gt;&lt;td style=\\&quot;width:200px\\&quot;&gt;Previous Versions&lt;\/td&gt;&lt;td&gt;&lt;\/td&gt;&lt;\/tr&gt;&quot;;\r\n\t\r\n    \r\n\t$html .= &quot;&lt;tr&gt;&lt;td&gt;&quot;;\r\n\t$html .= $DEV-&gt;input(&quot;btnUpdate&quot;,  $width=100, $alttext=&quot;Click here to save&quot;, $compulsory=&quot;&quot;, $inputtype=&quot;button&quot;, $value=&quot;Update&quot;, $event=&quot;onclick=\\&quot;document.forms[0].editcode.value = editor.getValue(); setscriptid(''{$script-&gt;SCRIPTID}'', false);  call_cdeajax(''ajaxSaveScript'', ''saveScript'', false); \\&quot;&quot;);                  \r\n\t$html .= $DEV-&gt;input(&quot;btnSave&quot;,  $width=100, $alttext=&quot;Click here to save&quot;, $compulsory=&quot;&quot;, $inputtype=&quot;button&quot;, $value=&quot;Save &amp; Close&quot;, $event=&quot;onclick=\\&quot;document.forms[0].editcode.value = editor.getValue(); setscriptid(''{$script-&gt;SCRIPTID}'', false);  setscriptprocessid (200, true); \\&quot;&quot;);                  \r\n    $html .= $DEV-&gt;input(&quot;btnCancel&quot;,  $width=100, $alttext=&quot;Click here to cancel&quot;, $compulsory=&quot;&quot;, $inputtype=&quot;button&quot;, $value=&quot;Cancel&quot;, $event=&quot;onclick=\\&quot;document.forms[0].editcode.value = editor.getValue(); setscriptid(''0'', false);  setscriptprocessid (0, true); \\&quot;&quot;);                  \r\n\t\r\n\t$html .= $DEV-&gt;input(&quot;editcode&quot;,  $width=100, $alttext=&quot;&quot;, $compulsory=&quot;&quot;, $inputtype=&quot;hidden&quot;);\r\n\t\/\/style=\\&quot;height: 500px;\\&quot;\r\n    $html .= &quot;&lt;textarea  id=\\&quot;deveditor\\&quot;&gt;&quot;.htmlspecialchars($this-&gt;get_script ($scriptname, $interface, $release, $editedby, true, $_REQUEST[&quot;chooseVersion&quot;])).&quot;&lt;\/textarea&gt;&quot;;\r\n    $html .= &quot;&lt;style&gt; .activeline {background: #3399FF !important;} &lt;\/style&gt;&quot;;\r\n\t\/\/ Add this to automatically close brackets and quotes : autoCloseBrackets: true,\r\n    $html .= ''&lt;script&gt; \r\n\t                  \r\n\t\r\n\t\r\n\t                    var editor = CodeMirror.fromTextArea(document.getElementById(&quot;deveditor&quot;), {\r\n                                      lineNumbers: true,\r\n\t\t\t\t\t\t\t\t\t  highlightSelectionMatches: true,\r\n                                      matchBrackets: true,\r\n                                      mode: &quot;''.$mode.''&quot;,\r\n                                      indentUnit: 4,\r\n                                      indentWithTabs: true,\r\n\t\t\t\t\t\t\t\t\t  lineWrapping: true,\r\n\t\t\t\t\t\t\t\t\t  extraKeys: {&quot;Ctrl-Q&quot;: function(cm){ cm.foldCode(cm.getCursor()); }, \r\n\t\t\t\t\t\t\t\t\t              &quot;Ctrl-\/&quot;: function (cm) { cm.replaceSelection (&quot;\/\/''.$_SESSION[&quot;username&quot;].'':&quot;); }, \r\n\t\t\t\t\t\t\t\t\t\t\t\t  &quot;Ctrl-.&quot;: function (cm) { cm.replaceSelection (&quot;\/\/''.$_SESSION[&quot;username&quot;].''#:&quot;); } \r\n\t\t\t\t\t\t\t\t\t\t\t\t  },\r\n\t\t\t\t\t\t\t\t \t  foldGutter: true,\r\n\t\t\t\t\t\t\t\t  \t  gutters: [&quot;CodeMirror-linenumbers&quot;, &quot;CodeMirror-foldgutter&quot;],\r\n\t\t\t\t\t\t\t\t\t  \r\n                                      enterMode: &quot;keep&quot;,\r\n\t\t\t\t\t\t\t                        smartIndent: false,\r\n                                      tabMode: &quot;shift&quot;,\r\n                                      theme: &quot;monokai&quot;,\r\n\t\t\t\t\t\t\t                        onCursorActivity: function() {\r\n            \t\t\t\t\t\t\t\t\t\t\t\t\t  editor.setLineClass(hlLine, null, null);\r\n            \t\t\t\t\t\t\t\t\t\t\t\t\t  hlLine = editor.setLineClass(editor.getCursor().line, null, &quot;activeline&quot;);\r\n            \t\t\t\t\t\t\t\t\t\t\t\t  }\r\n                                    });\r\n\t\t\t\t\t\t            \/\/var hlLine = editor.setLineClass(0, &quot;activeline&quot;);\r\n\t\t\t\t\t\t\t\t\tvar editorSize = screen.availHeight - 150;\r\n\t\t\t\t\t\t\t\t\teditor.setSize(null, editorSize);\r\n                      &lt;\/script&gt;'';\r\n\t\r\n    \r\n    $html .= $DEV-&gt;input(&quot;btnUpdate&quot;,  $width=100, $alttext=&quot;Click here to save&quot;, $compulsory=&quot;&quot;, $inputtype=&quot;button&quot;, $value=&quot;Update&quot;, $event=&quot;onclick=\\&quot;document.forms[0].editcode.value = editor.getValue(); setscriptid(''{$this-&gt;scriptid}'', false);  call_cdeajax(''ajaxSaveScript'', ''saveScript'', false); \\&quot;&quot;);                  \r\n\t$html .= $DEV-&gt;input(&quot;btnSave&quot;,  $width=100, $alttext=&quot;Click here to save&quot;, $compulsory=&quot;&quot;, $inputtype=&quot;button&quot;, $value=&quot;Save &amp; Close&quot;, $event=&quot;onclick=\\&quot;document.forms[0].editcode.value = editor.getValue(); setscriptid(''{$this-&gt;scriptid}'', false);  setscriptprocessid (200, true); \\&quot;&quot;);                  \r\n    $html .= $DEV-&gt;input(&quot;btnCancel&quot;,  $width=100, $alttext=&quot;Click here to cancel&quot;, $compulsory=&quot;&quot;, $inputtype=&quot;button&quot;, $value=&quot;Cancel&quot;, $event=&quot;onclick=\\&quot;document.forms[0].editcode.value = editor.getValue(); setscriptid(''0'', false);  setscriptprocessid (0, true); \\&quot;&quot;);                  \r\n\t$html .= &quot;&lt;\/td&gt;&lt;\/tr&gt;&quot;; \r\n\t$html .= &quot;&lt;\/table&gt;&quot;;\r\n\t\r\n\t\r\n\t\r\n    $html .= &quot;&lt;script&gt;document.title = ''{$script-&gt;SCRIPTNAME} - {$script-&gt;RELEASE} ({$script-&gt;VERSION})'';&lt;\/script&gt;&quot;;\r\n    $content = str_replace (&quot;''''&quot;, &quot;''&quot;, $script-&gt;CONTENT);\r\n\t$oldscript = $DEV-&gt;get_value (0, &quot;select * from tblrevision where scriptname = ''{$scriptname}'' and interface = ''{$interface}'' and release = ''{$release}''  order by version desc&quot;);\r\n    $oldcontent = str_replace (&quot;''''&quot;, &quot;''&quot;, $oldscript-&gt;CONTENT);\r\n    $changes = arr_diff (explode(&quot;\\n&quot;, $oldcontent), explode(&quot;\\n&quot;, $content), 0);\r\n    $html .= &quot;&lt;div&gt;Changes&lt;br \/&gt;&lt;pre&gt;&quot;.html_entity_decode(print_r(htmlspecialchars($changes), 1)).&quot;&lt;\/pre&gt;&lt;\/div&gt;&quot;;\r\n   \r\n   return $html;\r\n  \r\n  }\r\n  \r\n  function show_scripts ($interface, $scripttype, $moduleid=0) {\r\n    $DEV = $this-&gt;cdedev-&gt;DEV;\r\n    $request = $this-&gt;request;\r\n    \r\n    $sqlscript = &quot;select * from tblscript where release = ''{$request[&quot;release&quot;]}'' and interface = ''{$interface}'' and scripttype = ''{$scripttype}'' and moduleid = {$moduleid} order by scriptcategory, datemod desc&quot;;\r\n    $scripts = $DEV-&gt;get_row ($sqlscript);\r\n    \r\n   \r\n    $html .= &quot;&lt;div id=\\&quot;scriptaccordion\\&quot;&gt;&quot;;\r\n\t$html .= &quot;&lt;h3&gt;General Scripts&lt;\/h3&gt;&lt;div style=\\&quot;height: auto\\&quot;&gt;&quot;;\r\n\t$html .= &quot;&lt;table   class=\\&quot;datatable\\&quot;&gt;\\n&quot;;\r\n\t$html .= &quot;&lt;tr&gt;&lt;th&gt;Script Id&lt;\/th&gt;&lt;th&gt;Version&lt;\/th&gt;&lt;th&gt;Script Name&lt;\/th&gt;&lt;th&gt;Purpose&lt;\/th&gt;&lt;th&gt;Script Type&lt;\/th&gt;&lt;th&gt;Created By&lt;\/th&gt;&lt;th&gt;Last User&lt;\/th&gt;&lt;th&gt;Edited By&lt;\/th&gt;&lt;th&gt;Date Created&lt;\/th&gt;&lt;th&gt;Date Modified&lt;\/th&gt;&lt;th&gt;&quot;.$DEV-&gt;input (&quot;btnAdd&quot;, 60, &quot;Click here to add a script&quot;, &quot;&quot;, &quot;button&quot;, $value=&quot;Insert&quot;, &quot;onclick=\\&quot;setscriptid('''', false); setscriptprocessid(100, true);\\&quot;&quot;).&quot;&lt;\/th&gt;&lt;\/tr&gt;&quot;;\r\n    \r\n\t\r\n\r\n \r\n    $altcolor = &quot;#FFFFFF&quot;;\r\n\t$oldcategory = &quot;&quot;;\r\n\tforeach ($scripts as $sid =&gt; $script) {\r\n      $editbutton = $DEV-&gt;input (&quot;btnEdit&quot;, 60, &quot;Click here to add a script&quot;, &quot;&quot;, &quot;button&quot;, $value=&quot;Edit&quot;, &quot;onclick=\\&quot;setscriptid(''$script-&gt;SCRIPTID'', false); setscriptprocessid(110, true);\\&quot;&quot;);\r\n      $deletebutton = $DEV-&gt;input (&quot;btnDelete&quot;, 60, &quot;Click here to delete a script&quot;, &quot;&quot;, &quot;button&quot;, $value=&quot;Delete&quot;, &quot;onclick=\\&quot;if (confirm(''Delete {$script-&gt;SCRIPTNAME} ?'')) { setscriptid(''$script-&gt;SCRIPTID'', false); setscriptprocessid(300, true); } \\&quot;&quot;);\r\n     \r\n\t if ($altcolor == &quot;&quot;) {\r\n\t   $altcolor = &quot;#FFFFFF&quot;;\r\n\t   $style = &quot;&quot;;\r\n\t }\r\n\t   else {\r\n\t   $style = &quot;style=\\&quot;background-color: #FFFFFF\\&quot;&quot;;\r\n\t   $altcolor = &quot;&quot;;\r\n\t }  \r\n\t if ($oldcategory != $script-&gt;SCRIPTCATEGORY) {\r\n\t   $oldcategory = $script-&gt;SCRIPTCATEGORY;\r\n\t  $html .= &quot;&lt;\/table&gt;&lt;\/div&gt;&quot;; \r\n\t  $html .= &quot;&lt;h3&gt;$script-&gt;SCRIPTCATEGORY&lt;\/h3&gt;&lt;div&gt;&quot;;\r\n\t  $html .= &quot;&lt;table   class=\\&quot;datatable\\&quot;&gt;\\n&quot;;\r\n\t  $html .= &quot;&lt;tr&gt;&lt;th&gt;Script Id&lt;\/th&gt;&lt;th&gt;Version&lt;\/th&gt;&lt;th&gt;Script Name&lt;\/th&gt;&lt;th&gt;Purpose&lt;\/th&gt;&lt;th&gt;Script Type&lt;\/th&gt;&lt;th&gt;Created By&lt;\/th&gt;&lt;th&gt;Last User&lt;\/th&gt;&lt;th&gt;Edited By&lt;\/th&gt;&lt;th&gt;Date Created&lt;\/th&gt;&lt;th&gt;Date Modified&lt;\/th&gt;&lt;th&gt;&quot;.$DEV-&gt;input (&quot;btnAdd&quot;, 60, &quot;Click here to add a script&quot;, &quot;&quot;, &quot;button&quot;, $value=&quot;Insert&quot;, &quot;onclick=\\&quot;setscriptid('''', false); setscriptprocessid(100, true);\\&quot;&quot;).&quot;&lt;\/th&gt;&lt;\/tr&gt;&quot;;\r\n     }\r\n\t $html .= &quot;&lt;tr {$style}&gt;&lt;td&gt;{$script-&gt;SCRIPTID}&lt;\/td&gt;&lt;td&gt;{$script-&gt;VERSION}&lt;\/td&gt;&lt;td&gt;&lt;a href=\\&quot;javascript:void(0);\\&quot; onclick=\\&quot;setscriptid(''$script-&gt;SCRIPTID'', false); setscriptprocessid(110, true);\\&quot;&gt;{$script-&gt;SCRIPTNAME}&lt;\/a&gt;&lt;\/td&gt;&lt;td&gt;{$script-&gt;PURPOSE}&lt;\/td&gt;&lt;td&gt;{$script-&gt;SCRIPTTYPE}&lt;\/td&gt;&lt;td&gt;{$script-&gt;CREATEDBY}&lt;\/td&gt;&lt;td&gt;{$script-&gt;LASTUSER}&lt;\/td&gt;&lt;td&gt;{$script-&gt;EDITEDBY}&lt;\/td&gt;&lt;td&gt;{$script-&gt;DATECRT}&lt;\/td&gt;&lt;td&gt;{$script-&gt;DATEMOD}&lt;\/td&gt;&lt;td&gt;{$editbutton} {$deletebutton}&lt;\/td&gt;&lt;\/tr&gt;&quot;;    \r\n    }\r\n    \r\n    $html .= &quot;&lt;\/table&gt;&lt;\/div&gt;&lt;\/div&gt;&quot;;\r\n    $html .= ''&lt;script&gt; $(function() {\r\n\t\t\t\t\t\t\t\t$(&quot;#scriptaccordion&quot;).accordion({collapsible: true, heightStyle: &quot;content&quot;, active: false});\r\n\t\t\t\t\t\t\t\t}); &lt;\/script&gt;'';\r\n    return $html;\r\n  }\r\n  \r\n  \r\n  function draw () {\r\n    $DEV = $this-&gt;cdedev-&gt;DEV;\r\n\t\t$request = $this-&gt;request;\r\n\t\t$cdedev = $this-&gt;cdedev;\r\n\t\t$interface = $DEV-&gt;get_value (0, &quot;select * from tblinterface where interfaceid = {$this-&gt;interfaceid}&quot;);\r\n    $html = &quot;&quot;;\r\n                          \r\n    \/\/get the php4 sack include going\r\n\t\trequire_once ($cdedev-&gt;root.&quot;\/php4sack\/PHP4sack.php&quot;);\r\n\t\t        \r\n\t\t$html .= $DEV-&gt;switchid (&quot;scriptprocessid&quot;); \r\n\t\t$html .= $DEV-&gt;switchid (&quot;scriptid&quot;);\r\n    \r\n    switch ($_REQUEST[&quot;scriptprocessid&quot;]) { \r\n      \/\/add \/ edit a script\r\n      case 100:\r\n        if ($scriptid == &quot;&quot;) {\r\n\t\t  if ($request[&quot;moduleprocessid&quot;] == 400) {\r\n\t\t    $interface = &quot;&quot;;\r\n\t\t\t$scripttype =  &quot;global&quot;;\r\n\t\t  }\r\n\t\t    else {\r\n\t\t\t$interface = $interface-&gt;NAME;\r\n\t\t\t$scripttype =  &quot;api&quot;;\r\n\t\t  }\t\r\n          $scriptid = $this-&gt;insert_script ($scriptname=&quot;&quot;, $content=&quot;&quot;, $interface, $scripttype, $request[&quot;release&quot;], $_SESSION[&quot;devusername&quot;], $purpose=&quot;&quot;, $moduleid=0);     \r\n          $html .= setscriptid($scriptid, false);\r\n          $html .= setscriptprocessid(110, true);\r\n        }\r\n          else {\r\n          $html .= setscriptprocessid(110, true);  \r\n        }\r\n      break;\r\n      case 110:\r\n        \/\/show the script\r\n        $script = $DEV-&gt;get_value (0, &quot;select * from tblscript where scriptid = {$request[&quot;scriptid&quot;]}&quot;);\r\n        $html .= $this-&gt;show_script ($script-&gt;SCRIPTNAME, $interface-&gt;NAME, $request[&quot;release&quot;], &quot;php&quot;); \r\n      break;\r\n      \/\/save a script\r\n      case 200:\r\n        \/\/print_r ($request);\r\n\t\t\r\n        $this-&gt;update_script ($request[&quot;scriptid&quot;], $request[&quot;edtScriptName&quot;], $request[&quot;edtScriptCategory&quot;], $request[&quot;edtScriptPurpose&quot;], $request[&quot;editcode&quot;], $request[&quot;edtScriptStatus&quot;], $moduleid=0, $_SESSION[&quot;devusername&quot;]);\r\n        $html .= setscriptid('''', false);\r\n\t\t$html .= setscriptprocessid (0, true);\r\n      break;\r\n      \/\/delete a script\r\n      case 300:\r\n\t     $this-&gt;delete_script ($request[&quot;scriptid&quot;]);\r\n\t\t $html .= setscriptid('''', false);\r\n         $html .= setscriptprocessid (0, true);\r\n      break;\r\n      default:      \r\n  \t\t  \/\/load the main interface script        \r\n       if ($request[&quot;moduleprocessid&quot;] == 100 || $request[&quot;scriptprocessid&quot;] == &quot;&quot;) {        \r\n    \t\t  $html .= $this-&gt;show_script ($interface-&gt;NAME, $interface-&gt;NAME, $request[&quot;release&quot;], &quot;php&quot;);        \r\n        }\r\n          else \r\n        if ($request[&quot;moduleprocessid&quot;] == 200) {\r\n\t\t  if ($request[&quot;csstype&quot;] == &quot;&quot;) {\r\n\t\t    $request[&quot;csstype&quot;] = &quot;css&quot;;\r\n\t\t  }\r\n\t\t  \r\n          $html .= $this-&gt;show_script ($interface-&gt;NAME.$request[&quot;csstype&quot;], $interface-&gt;NAME, $request[&quot;release&quot;], &quot;css&quot;);  \r\n        }\r\n          else \r\n        if ($request[&quot;moduleprocessid&quot;] == 300) {\r\n          $html .= $this-&gt;show_scripts ($interface-&gt;NAME, &quot;api&quot;);\r\n        }\r\n\t\t  else \r\n\t\tif ($request[&quot;moduleprocessid&quot;] == 400) {\r\n\t\t  $html .= $DEV-&gt;switchid(&quot;moduleprocessid&quot;);\r\n\t\t  $html .= $this-&gt;show_scripts (&quot;&quot;, &quot;global&quot;);\r\n\t\t}\r\n\t\tif ($request[&quot;moduleprocessid&quot;] == 500) {\r\n\t\t  $html .= new MenuBuilder($this-&gt;cdedev-&gt;CDE);\r\n\t\t}\r\n      break;\r\n    }\r\n    return $html;\r\n  }\r\n}\r\n\r\nclass dev_module {\r\n    public $CDE;\r\n  \tpublic $request;\r\n  \tpublic $interfaceid;\r\n\tpublic $cdedev;\r\n  \t\r\n  \tfunction dev_module ($CDE, $request, $interfaceid, $cdedev) {\r\n  \t  $this-&gt;CDE = $CDE;\r\n  \t  $this-&gt;request = $request;\r\n  \t  $this-&gt;interfaceid = $interfaceid;\r\n\t  $this-&gt;cdedev = $cdedev;\r\n  \t}\r\n  \t\r\n  \tfunction __toString () {\r\n  \t  return $this-&gt;draw();\r\n  \t}\r\n  \t\r\n  \tfunction draw() {\r\n  \t  $CDE = $this-&gt;CDE;\r\n  \t  $request = $this-&gt;request;\r\n  \t  $interfaceid = $this-&gt;interfaceid;\r\n\t  $cdedev = $this-&gt;cdedev;\r\n  \t  \r\n  \t  if (!isset($_SESSION[&quot;username&quot;])) {\r\n        $_SESSION[&quot;username&quot;] = &quot;Andre&quot;;      \r\n      }\r\n  \t  \r\n  \t  $interface = $CDE-&gt;get_value (0, &quot;select * from tblinterface where interfaceid = {$interfaceid}&quot;);\r\n  \t  \r\n  \t  $html = $CDE-&gt;switchid(&quot;moduleprocessid&quot;);\r\n  \t  \r\n  \t  switch ($request[&quot;moduleprocessid&quot;]) {\r\n  \t\t  default:\r\n  \t\t\t  $html .= &quot;&lt;table  class=\\&quot;moduletable\\&quot;&gt;&quot;;\r\n  \t\t\t  $html .= &quot;&lt;tr&gt;&lt;th&gt;Interface: {$interface-&gt;NAME} &lt;\/th&gt;&lt;\/tr&gt;&quot;;\r\n  \t\t\t  $html .= &quot;&lt;tr&gt;&lt;td&gt;&lt;b&gt;Created By :&lt;\/b&gt; {$interface-&gt;CREATEDBY} on {$interface-&gt;DATECRT}&lt;\/th&gt;&lt;\/tr&gt;&quot;;\r\n  \t\t\t  $html .= &quot;&lt;tr&gt;&lt;td&gt;Purpose &lt;\/td&gt;&lt;\/tr&gt;&quot;;\r\n  \t\t\t  $html .= &quot;&lt;tr&gt;&lt;td&gt;&lt;textarea name=\\&quot;interfacepurpose\\&quot; style=\\&quot;width:240px;\\&quot;&gt;{$interface-&gt;PURPOSE}&lt;\/textarea&gt;&lt;\/td&gt;&lt;\/tr&gt;&quot;;\r\n  \t\t\t  $prescript = &quot;setscriptprocessid(0, false); setscriptid('''', false);&quot;;\r\n  \t\t\t  $html .= &quot;&lt;tr&gt;&lt;th&gt;Layout [&lt;a href=\\&quot;javascript:void(0);\\&quot; onclick=\\&quot;{$prescript} setmoduleprocessid(100, true)\\&quot;&gt;Code&lt;\/a&gt;] [&lt;a href=\\&quot;javascript:void(0);\\&quot; onclick=\\&quot;{$prescript} setmoduleprocessid(200, true)\\&quot;&gt;SCSS&lt;\/a&gt;] [&lt;a href=\\&quot;javascript:void(0);\\&quot; onclick=\\&quot;{$prescript} setmoduleprocessid(300, true)\\&quot;&gt;Scripts&lt;\/a&gt;] [&lt;a href=\\&quot;javascript:void(0);\\&quot; onclick=\\&quot;{$prescript} setmoduleprocessid(500, true)\\&quot;&gt;Menu&lt;\/a&gt;]&lt;\/th&gt;&lt;\/tr&gt;&quot;;\r\n\t\t\t  $release = new dev_release($CDE, $request, $cdedev);\r\n  \t\t\t  $html .= &quot;&lt;tr&gt;&lt;td&gt;&quot;.$release.&quot;&lt;\/td&gt;&lt;\/tr&gt;&quot;;\r\n  \t\t\t  $html .= &quot;&lt;\/table&gt;&quot;;\r\n  \t\t  break;\r\n  \t  }\r\n  \t  \r\n  \t  return $html;\r\n  \t}\r\n  \t\t\r\n  }\t\r\n\/*\r\nScript Name: Users Interface\r\nPurpose:\r\nInterface to allow for the adding of users into the development environment\r\nCreated By: Andre\r\nCreated Date: 2012-08-21 07:28:03\r\n*\/\r\nclass dev_user {\r\n  public $CDE;\r\n  public $request;\r\n  \r\n  function dev_user ($CDE, $request) {\r\n    $this-&gt;CDE = $CDE;\r\n\t$this-&gt;request = $request;\r\n  }\r\n  \r\n  function __toString () {\r\n    return $this-&gt;draw();\r\n  }\r\n  \r\n  function show_users () {\r\n    $CDE = $this-&gt;CDE;\r\n\t$sqlusers = &quot;select * from tbluser order by name&quot;;\r\n\t$users = $CDE-&gt;get_row ($sqlusers);\r\n\t\r\n\t$html .= &quot;&lt;table class=\\&quot;datatable\\&quot;&gt;&quot;;\r\n\t$html .= &quot;&lt;tr&gt;&lt;th&gt;User Id&lt;\/th&gt;&lt;th&gt;Name&lt;\/th&gt;&lt;th&gt;Email&lt;\/th&gt;&lt;th&gt;Status&lt;\/th&gt;&lt;th&gt;Edit\/Delete&lt;\/th&gt;&lt;\/tr&gt;&quot;;\r\n\tforeach ($users as $uid =&gt; $user) {\r\n\t  \r\n\t  if ($user-&gt;STATUS == 0) {\r\n\t    $userstatus = &quot;Disabled&quot;;\r\n\t  }\r\n\t    else {\r\n\t\t$userstatus = &quot;Enabled&quot;;\r\n\t  }\r\n\t  \r\n\t  $editbutton = $CDE-&gt;input (&quot;btnEdit&quot;, 60, &quot;Click here to edit a user&quot;, &quot;&quot;, &quot;button&quot;, $value=&quot;Edit&quot;, &quot;onclick=\\&quot;setuserid(''$user-&gt;USERID'', false); setuserprocessid(110, true);\\&quot;&quot;);\r\n      $deletebutton = $CDE-&gt;input (&quot;btnDelete&quot;, 60, &quot;Click here to delete a script&quot;, &quot;&quot;, &quot;button&quot;, $value=&quot;Delete&quot;, &quot;onclick=\\&quot;if (confirm(''Delete {$user-&gt;NAME} ?'')) { setuserid(''$user-&gt;USERID'', false); setuserprocessid(300, true); } \\&quot;&quot;);\r\n     \r\n\t  $html .= &quot;&lt;tr&gt;&lt;td&gt;{$user-&gt;USERID}&lt;\/td&gt;&lt;td&gt;{$user-&gt;NAME}&lt;\/td&gt;&lt;td&gt;{$user-&gt;EMAIL}&lt;\/td&gt;&lt;td&gt;{$userstatus}&lt;\/td&gt;&lt;td&gt;{$editbutton}{$deletebutton}&lt;\/td&gt;&lt;\/tr&gt;&quot;;\r\n\t}\r\n\t\r\n\t$insertbutton = $CDE-&gt;input (&quot;btnInsert&quot;, 60, &quot;Click here to add a user&quot;, &quot;&quot;, &quot;button&quot;, $value=&quot;Add&quot;, &quot;onclick=\\&quot;setuserid('''', false); setuserprocessid(100, true);\\&quot;&quot;);\r\n   \t$html .= &quot;&lt;tr&gt;&lt;td colspan=\\&quot;5\\&quot; style=\\&quot;text-align: right;\\&quot;&gt;{$insertbutton}&lt;\/td&gt;&lt;\/tr&gt;&quot;;\r\n\t$html .= &quot;&lt;\/table&gt;&quot;;\r\n\t\r\n\treturn $html;\r\n  \r\n  }\r\n  \r\n  \/\/returns userid\r\n  function insert_user ($name, $email, $password) {\r\n    $CDE = $this-&gt;CDE;\r\n\t$userid = $CDE-&gt;get_next_id (&quot;tbluser&quot;, &quot;userid&quot;);\r\n\tif ($name == &quot;&quot;) {\r\n\t  $name = &quot;User&quot;.$userid;\r\n\t}\r\n\t$sqlinsert = &quot;insert into tbluser (userid, name, email, passwd, status, datecrt)\r\n\t                  \t\t\t\tvalues (? \t\t, ?\t\t, ?\t\t, ?\t\t\t, ?\t\t , ''now'')&quot;;\r\n    $CDE-&gt;exec ($sqlinsert, $userid, $name, $email, crypt($password), 0);\r\n\treturn $userid;\r\n  }\r\n  \r\n  function update_user ($userid, $name, $email, $password, $status) {\r\n    $CDE = $this-&gt;CDE;\r\n\t$request = $CDE-&gt;request;\r\n\t\r\n\tif ($password != &quot;&quot;) {\r\n\t  $password = crypt($password);\r\n\t  $sqlupdate = &quot;update tbluser set name = ?, email =  ?, passwd = ?, status = ? where userid = ?  &quot;;\r\n      $CDE-&gt;exec ($sqlupdate, $name, $email, $password, $status, $userid);\r\n\t}\r\n\t  else {\r\n\t  $sqlupdate = &quot;update tbluser set name = ?, email =  ?, status = ? where userid = ?  &quot;;\r\n      $CDE-&gt;exec ($sqlupdate, $name, $email, $status, $userid);\r\n\t}  \r\n\t\r\n\treturn true;\r\n  }\r\n  \r\n  function delete_user ($userid) {\r\n    $CDE = $this-&gt;CDE;\r\n\t$sqldelete = &quot;delete from tbluser where userid = ?&quot;;\r\n\t$CDE-&gt;exec ($sqldelete, $userid);\r\n    return true;\r\n  }\r\n  \r\n  function show_user ($userid) {\r\n    $CDE = $this-&gt;CDE;\r\n\t$request = $this-&gt;request;\r\n\t\r\n\t$sqluser = &quot;select * from tbluser where userid = {$userid}&quot;;\r\n\t$user = $CDE-&gt;get_value (0, $sqluser);\r\n\t\r\n    $html .= &quot;&lt;table class=\\&quot;dataform\\&quot;&gt;&quot;;\r\n\t$html .= &quot; &lt;tr&gt;&lt;th colspan=\\&quot;2\\&quot;&gt;Edit User&lt;\/th&gt;&lt;\/tr&gt;&quot;;\r\n\t$html .= &quot; &lt;tr&gt;&lt;td&gt;Name&lt;\/td&gt;&lt;td&gt;&quot;.$CDE-&gt;input (&quot;edtName&quot;, 200, &quot;User name&quot;, &quot;&quot;, &quot;text&quot;, $user-&gt;NAME, &quot;&quot;).&quot;&lt;\/td&gt;&lt;\/tr&gt;&quot;;\t\r\n\t$html .= &quot; &lt;tr&gt;&lt;td&gt;Email&lt;\/td&gt;&lt;td&gt;&quot;.$CDE-&gt;input (&quot;edtEmail&quot;, 200, &quot;Email Address&quot;, &quot;&quot;, &quot;text&quot;, $user-&gt;EMAIL, &quot;&quot;).&quot;&lt;\/td&gt;&lt;\/tr&gt;&quot;;\t\r\n\t$html .= &quot; &lt;tr&gt;&lt;td&gt;Password&lt;\/td&gt;&lt;td&gt;&quot;.$CDE-&gt;input (&quot;edtPasswd&quot;, 200, &quot;Password&quot;, &quot;&quot;, &quot;password&quot;, &quot;&quot;, &quot;&quot;).&quot;&lt;\/td&gt;&lt;\/tr&gt;&quot;;\r\n\t$html .= &quot; &lt;tr&gt;&lt;td&gt;Status&lt;\/td&gt;&lt;td&gt;&quot;.$CDE-&gt;select (&quot;edtStatus&quot;, 200,  &quot;Choose status for developer&quot;, &quot;array&quot;, &quot;0,Disabled|1,Enabled&quot;, $user-&gt;STATUS).&quot;&lt;\/td&gt;&lt;\/tr&gt;&quot;;\r\n\t\r\n\t$okbutton = $CDE-&gt;input (&quot;btnOk&quot;, 100, &quot;Click here to accept the data&quot;, &quot;&quot;, &quot;button&quot;, $value=&quot;OK&quot;, &quot;onclick=\\&quot;setuserid(''$userid'', false); setuserprocessid(200, true);\\&quot;&quot;);\r\n    $canbutton = $CDE-&gt;input (&quot;btnCancel&quot;, 80, &quot;Click here to cancel the data&quot;, &quot;&quot;, &quot;button&quot;, $value=&quot;Cancel&quot;, &quot;onclick=\\&quot;setuserid('''', false); setuserprocessid(0, true);\\&quot;&quot;);\r\n  \r\n    $html .= &quot;&lt;tr&gt;&lt;td colspan=\\&quot;2\\&quot; style=\\&quot;text-align:right;\\&quot;&gt; {$okbutton} {$canbutton} &lt;\/td&gt;&lt;\/tr&gt;&quot;;\r\n    $html .= &quot;&lt;\/table&gt;&quot;; \r\n    return $html;\r\n  }\r\n  \r\n  function draw () {\r\n    $CDE = $this-&gt;CDE;\r\n\t$request = $this-&gt;request;\r\n\t$html = &quot;&quot;;\r\n\t$html .= $CDE-&gt;switchid (&quot;userid&quot;);\r\n\t$html .= $CDE-&gt;switchid (&quot;userprocessid&quot;);\r\n\t\/\/$html .= &quot;User Interface&quot;;\r\n\tswitch ($request[&quot;userprocessid&quot;]) {\r\n\t  case 100:\r\n\t    if ($request[&quot;userid&quot;] == &quot;&quot;) {\r\n\t\t  $userid = $this-&gt;insert_user (&quot;&quot;, &quot;&quot;, &quot;&quot;);\r\n\t\t  $html .= setuserid ($userid, false);\r\n\t\t  $html .= setuserprocessid (110, true);\r\n\t\t}\r\n\t  break;\r\n\t  case 110:\r\n\t    \/\/show the user\r\n\t    $html .= $this-&gt;show_user($request[&quot;userid&quot;]);\r\n\t  break;\r\n\t  case 200:\r\n\t    \/\/save the user\r\n\t\t$this-&gt;update_user ($request[&quot;userid&quot;], $request[&quot;edtName&quot;], $request[&quot;edtEmail&quot;], $request[&quot;edtPasswd&quot;], $request[&quot;edtStatus&quot;]);\r\n\t\t$html .= setuserid('''', false);\r\n\t\t$html .= setuserprocessid (0, true);\r\n\t  break;\r\n\t  case 300:\r\n\t    $this-&gt;delete_user ($request[&quot;userid&quot;]);\r\n\t    $html .= setuserid('''', false);\r\n\t\t$html .= setuserprocessid (0, true);\r\n\t  break;\r\n\t  default:\r\n\t     $html .= $this-&gt;show_users();\r\n\t  break;\r\n\t}\r\n\t\r\n\t\r\n\treturn $html;\r\n  \r\n  }\r\n  \r\n\r\n\r\n\r\n}\r\n\r\n\r\n\/**\r\n        Diff implemented in pure php, written from scratch.\r\n        Copyright (C) 2003  Daniel Unterberger &lt;diff.phpnet@holomind.de&gt;\r\n           \r\n        This program is free software; you can redistribute it and\/or\r\n        modify it under the terms of the GNU General Public License\r\n        as published by the Free Software Foundation; either version 2\r\n        of the License, or (at your option) any later version.\r\n        \r\n        This program is distributed in the hope that it will be useful,\r\n        but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n        MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n        GNU General Public License for more details.\r\n        \r\n        You should have received a copy of the GNU General Public License\r\n        along with this program; if not, write to the Free Software\r\n        Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.\r\n        \r\n        http:\/\/www.gnu.org\/licenses\/gpl.html\r\n\r\n        About:\r\n        I searched a function to compare arrays and the array_diff()\r\n        was not specific enough. It ignores the order of the array-values.\r\n        So I reimplemented the diff-function which is found on unix-systems\r\n        but this you can use directly in your code and adopt for your needs.\r\n        Simply adopt the formatline-function. with the third-parameter of arr_diff()\r\n        you can hide matching lines. Hope someone has use for this.\r\n\r\n        Contact: d.u.diff@holomind.de &lt;daniel unterberger&gt;\r\n    **\/\r\n\r\n    function arr_diff( $f1 , $f2 , $show_equal = 0 )\r\n    {\r\n\t   \r\n        $c1         = 0 ;                   # current line of left\r\n        $c2         = 0 ;                   # current line of right\r\n        $max1       = count( $f1 ) ;        # maximal lines of left\r\n        $max2       = count( $f2 ) ;        # maximal lines of right\r\n        $outcount   = 0;                    # output counter\r\n        $hit1       = &quot;&quot; ;                  # hit in left\r\n        $hit2       = &quot;&quot; ;                  # hit in right\r\n\r\n        while ( \r\n                $c1 &lt; $max1                 # have next line in left\r\n                and                 \r\n                $c2 &lt; $max2                 # have next line in right\r\n                and \r\n                ($stop++) &lt; 1000            # don-t have more then 1000 ( loop-stopper )\r\n                and \r\n                $outcount &lt; 20              # output count is less then 20\r\n              )\r\n        {\r\n            \/**\r\n            *   is the trimmed line of the current left and current right line\r\n            *   the same ? then this is a hit (no difference)\r\n            *\/  \r\n            if ( trim( $f1[$c1] ) == trim ( $f2[$c2])  )    \r\n            {\r\n                \/**\r\n                *   add to output-string, if &quot;show_equal&quot; is enabled\r\n                *\/\r\n                $out    .= ($show_equal==1) \r\n                         ?  formatline ( ($c1) , ($c2), &quot;=&quot;, $f1[ $c1 ] ) \r\n                         : &quot;&quot; ;\r\n                \/**\r\n                *   increase the out-putcounter, if &quot;show_equal&quot; is enabled\r\n                *   this ist more for demonstration purpose\r\n                *\/\r\n                if ( $show_equal == 1 )  \r\n                { \r\n                    $outcount++ ; \r\n                }\r\n                \r\n                \/**\r\n                *   move the current-pointer in the left and right side\r\n                *\/\r\n                $c1 ++;\r\n                $c2 ++;\r\n            }\r\n\r\n            \/**\r\n            *   the current lines are different so we search in parallel\r\n            *   on each side for the next matching pair, we walk on both \r\n            *   sided at the same time comparing with the current-lines\r\n            *   this should be most probable to find the next matching pair\r\n            *   we only search in a distance of 10 lines, because then it\r\n            *   is not the same function most of the time. other algos\r\n            *   would be very complicated, to detect ''real'' block movements.\r\n            *\/\r\n            else\r\n            {\r\n                \r\n                $b      = &quot;&quot; ;\r\n                $s1     = 0  ;      # search on left\r\n                $s2     = 0  ;      # search on right\r\n                $found  = 0  ;      # flag, found a matching pair\r\n                $b1     = &quot;&quot; ;      \r\n                $b2     = &quot;&quot; ;\r\n                $fstop  = 0  ;      # distance of maximum search\r\n\r\n                #fast search in on both sides for next match.\r\n                while ( \r\n                        $found == 0             # search until we find a pair\r\n                        and \r\n                        ( $c1 + $s1 &lt;= $max1 )  # and we are inside of the left lines\r\n                        and \r\n                        ( $c2 + $s2 &lt;= $max2 )  # and we are inside of the right lines\r\n                        and     \r\n                        $fstop++  &lt; 10          # and the distance is lower than 10 lines\r\n                      )\r\n                {\r\n\r\n                    \/**\r\n                    *   test the left side for a hit\r\n                    *\r\n                    *   comparing current line with the searching line on the left\r\n                    *   b1 is a buffer, which collects the line which not match, to \r\n                    *   show the differences later, if one line hits, this buffer will\r\n                    *   be used, else it will be discarded later\r\n                    *\/\r\n                    #hit\r\n                    if ( trim( $f1[$c1+$s1] ) == trim( $f2[$c2] )  )\r\n                    {\r\n                        $found  = 1   ;     # set flag to stop further search\r\n                        $s2     = 0   ;     # reset right side search-pointer\r\n                        $c2--         ;     # move back the current right, so next loop hits\r\n                        $b      = $b1 ;     # set b=output (b)uffer\r\n                    }\r\n                    #no hit: move on\r\n                    else\r\n                    {\r\n                        \/**\r\n                        *   prevent finding a line again, which would show wrong results\r\n                        *\r\n                        *   add the current line to leftbuffer, if this will be the hit\r\n                        *\/\r\n                        if ( $hit1[ ($c1 + $s1) . &quot;_&quot; . ($c2) ] != 1 )\r\n                        {   \r\n                            \/**\r\n                            *   add current search-line to diffence-buffer\r\n                            *\/\r\n                            $b1  .= formatline( ($c1 + $s1) , ($c2), &quot;-&quot;, $f1[ $c1+$s1 ] );\r\n\r\n                            \/**\r\n                            *   mark this line as ''searched'' to prevent doubles. \r\n                            *\/\r\n                            $hit1[ ($c1 + $s1) . &quot;_&quot; . $c2 ] = 1 ;\r\n                        }\r\n                    }\r\n\r\n\r\n\r\n                    \/**\r\n                    *   test the right side for a hit\r\n                    *\r\n                    *   comparing current line with the searching line on the right\r\n                    *\/\r\n                    if ( trim ( $f1[$c1] ) == trim ( $f2[$c2+$s2])  )\r\n                    {\r\n                        $found  = 1   ;     # flag to stop search\r\n                        $s1     = 0   ;     # reset pointer for search\r\n                        $c1--         ;     # move current line back, so we hit next loop\r\n                        $b      = $b2 ;     # get the buffered difference\r\n                    }\r\n                    else\r\n                    {   \r\n                        \/**\r\n                        *   prevent to find line again\r\n                        *\/\r\n                        if ( $hit2[ ($c1) . &quot;_&quot; . ( $c2 + $s2) ] != 1 )\r\n                        {\r\n                            \/**\r\n                            *   add current searchline to buffer\r\n                            *\/\r\n                            $b2   .= formatline ( ($c1) , ($c2 + $s2), &quot;+&quot;, $f2[ $c2+$s2 ] );\r\n\r\n                            \/**\r\n                            *   mark current line to prevent double-hits\r\n                            *\/\r\n                            $hit2[ ($c1) . &quot;_&quot; . ($c2 + $s2) ] = 1;\r\n                        }\r\n\r\n                     }\r\n\r\n                    \/**\r\n                    *   search in bigger distance\r\n                    *\r\n                    *   increase the search-pointers (satelites) and try again\r\n                    *\/\r\n                    $s1++ ;     # increase left  search-pointer\r\n                    $s2++ ;     # increase right search-pointer  \r\n                }\r\n\r\n                \/**\r\n                *   add line as different on both arrays (no match found)\r\n                *\/\r\n                if ( $found == 0 )\r\n                {\r\n                    $b  .= formatline ( ($c1) , ($c2), &quot;-&quot;, $f1[ $c1 ] );\r\n                    $b  .= formatline ( ($c1) , ($c2), &quot;+&quot;, $f2[ $c2 ] );\r\n                }\r\n\r\n                \/** \r\n                *   add current buffer to outputstring\r\n                *\/\r\n                $out        .= $b;\r\n                $outcount++ ;       #increase outcounter\r\n\r\n                $c1++  ;    #move currentline forward\r\n                $c2++  ;    #move currentline forward\r\n\r\n                \/**\r\n                *   comment the lines are tested quite fast, because \r\n                *   the current line always moves forward\r\n                *\/\r\n\r\n            } \/*endif*\/\r\n\r\n        }\/*endwhile*\/\r\n\r\n        return $out;\r\n\r\n    }\/*end func*\/\r\n\r\n    \/**\r\n    *   callback function to format the diffence-lines with your ''style''\r\n    *\/\r\n    function formatline( $nr1, $nr2, $stat, &amp;$value )  #change to $value if problems\r\n    {\r\n        if ( trim( $value ) == &quot;&quot; )\r\n        {\r\n            return &quot;&quot;;\r\n        }\r\n\r\n        switch ( $stat )\r\n        {\r\n            case &quot;=&quot;:\r\n                return $nr1. &quot; : $nr2 : = &quot;.htmlentities( $value ) ;\r\n            break;\r\n\r\n            case &quot;+&quot;:\r\n                return $nr1. &quot; : $nr2 : + &lt;font color=''blue'' &gt;&quot;.htmlentities( $value )  .&quot;&lt;\/font&gt;&quot;;\r\n            break;\r\n\r\n            case &quot;-&quot;:\r\n                return $nr1. &quot; : $nr2 : - &lt;font color=''red'' &gt;&quot;.htmlentities( $value )  .&quot;&lt;\/font&gt;&quot;;\r\n            break;\r\n        }\r\n\r\n    }\r\n"},{"recid":4,"SCRIPTID":"3","SCRIPTNAME":"Developercss","CONTENT":"* { \r\n\tbox-sizing: border-box;\r\n\t-moz-box-sizing: border-box;\r\n\t-webkit-box-sizing: border-box;\r\n}\r\n\r\nbody {\r\n  padding: 0em; \r\n  margin : 0em;\r\n  font-family: Arial;\r\n  font-size: 14px;\r\n}\r\ninput[type=button] {\r\n\tborder: thin solid #404;\r\n\tbackground-color: #0096FF;\r\n\tborder-radius: 5px;\r\n\tfont-size: 0.7em;\r\n\tcolor: #FFF;\r\n\tpadding: 5px 3px;\r\n\tmargin: 1px;\r\n}\r\ninput[type=button]:hover{\r\n\tbackground-color: #0087E6;\r\n}\r\n.navmain {\r\n\theight: 40px;\r\n\tbackground-color: #b5b5b5;\r\n\tpadding-top: 10px;\r\n}\r\n.navmain a {\r\n\tpadding: 5px 10px 5px 10px;\r\n\tfont-weight: bold;\r\n\tborder-radius: 8px;\r\n\tmargin-left: 0.25em;\r\n\tmargin-right: 0.25em;\r\n\tbackground-color: #888888;\r\n\tcolor: #CCCCCC;\r\n\ttext-decoration: none;\r\n\tfloat: left;\r\n}\r\n.navmain a:hover {\r\n\tpadding: 5px 10px 5px 10px;\r\n\tbackground-color: #999999;\r\n\tcolor: #e7e7e7;\r\n}\r\n.navinterface {\r\n\tbackground-color: #b5b5b5;\r\n}\r\n.navinterface a {\r\n\tbox-shadow: 1px 0 2px #095AA7;\r\n    color: #FFFFFF;\r\n    display: inline-block;\r\n    font-weight: bold;\r\n    margin-bottom: 0.5em;\r\n    padding: 5px 10px;\r\n    text-decoration: none;\r\n}\r\n.navinterface a:hover {\r\n\tcolor: #e7e7e7;\r\n\tbox-shadow: 0px 0px 1px #095AA7;\r\n}\r\n.navinterface input[type=text] {\r\n\tborder: thin solid;\r\n\tborder-radius: 8px;\r\n\tpadding: 5px 10px 5px 10px;\r\n}\r\n.navinterface input[type=text]:focus {\r\n\tbackground-color: #575757;\r\n\tcolor: #FF8719;\r\n}\r\n.navinterface input[type=button] {\r\n\tpadding: 3px 10px;\r\n\tborder-radius: 5px;\r\n\tmargin-left: 1em;\r\n\tborder: none;\r\n}\r\n.interface {\r\n\tborder-top-left-radius: 8px;\r\n\tborder-bottom-left-radius: 8px;\r\n\tbackground-color: #095AA7;\r\n\tmargin-left: 0.25em;\r\n\tmargin-bottom: 0.25em;\r\n\t\r\n\r\n}\r\n.interface:hover {\r\n\tbackground-color: #063F74;\r\n}\r\n.interfacedel {\r\n\tbackground-color: #FF8719;\r\n\tborder-top-right-radius: 8px;\r\n\tborder-bottom-right-radius: 8px;\r\n\tmargin-right: 0.25em;\r\n}\r\n.interfacedel:hover {\r\n\tbackground-color: #D47015;\r\n}\r\ntable {\r\n\tborder-collapse: collapse;\r\n}\r\ntd, th {\r\n  vertical-align: top;\r\n  text-align: left;\r\n  font-size: 1.0em;\r\n}\r\nth {\r\n  font-size: 0.8em;\r\n}\r\n.datatable {\r\n\tbackground-color: #e7e7e7;\r\n\twidth: 100%;\r\n}\r\n.datatable th {\r\n\tbackground-color: #888888;\r\n\tcolor: #FF8719;\r\n\tborder: thin solid #999;\r\n\tpadding: 0.5em;\r\n}\r\n.datatable td {\r\n\tborder-top: thin solid #999;\r\n\tborder-bottom: thin solid #999;\r\n\tpadding: 0.25em;\r\n}\r\n.dataform {\r\n\tbackground-color: #e7e7e7;\r\n\t\/*margin: 1em;*\/\r\n\tpadding: 1em;\r\n\tborder: thin solid;\r\n}\r\n.dataform th {\r\n\tbackground-color: #888888;\r\n\tcolor: #FF8719;\r\n\tborder: thin solid #999;\r\n\tpadding: 0.5em;\r\n}\r\n.dataform td {\r\n\tpadding: 0.25em;\r\n\tvertical-align: middle;\r\n}\r\ninput  {\r\n  font-size: 1em;\r\n}\r\ninput[type=button] {\r\n  cursor : pointer;\r\n  cursor : hand;\r\n}\r\ntextarea {\r\n font-size: 1.2em;\r\n}\r\n.sideBar {\r\n    float: left;\r\n    position: relative;\r\n    width: 320px;\r\n}\r\n.scriptArea {\r\n    float: left;\r\n    width: calc(100% - 320px);\r\n\twidth: -webkit-calc(100% - 320px);\r\n}\r\n.menuitem {\r\n  background : #0E71B4;\r\n  padding: 2px;\r\n  width: 10em;\r\n  display: block;\r\n  float: left;\r\n  text-align: center;\r\n  text-decoration: none;\r\n  font-weight: bold;\r\n  color: #FFFFFF;\r\n  -moz-border-radius-bottomright: 5px;\r\n  border-bottom-right-radius: 5px;\r\n  -moz-border-radius-bottomleft: 5px;\r\n  border-bottom-left-radius: 5px;\r\n}\r\n.menuitem:hover {\r\n  background: red;\r\n}\r\n.moduletable {\r\n    width: 100%;\r\n}\r\n.moduletable  td{\r\n\tpadding: 0.5em;\r\n}\r\n.moduletable th {\r\n  background: #FF9933;\r\n  padding: 5px;\r\n}\r\n\r\n#login {\r\n\tline-height: 2em;\r\n\tbackground-color: #e7e7e7;\r\n\twidth: 240px;\r\n\tpadding: 1em;\r\n\tborder-radius: 10px;\r\n\tbox-shadow: 1px 2px 5px #000000;\r\n\tposition: absolute;\r\n\ttop: 20%;\r\n\tleft: 50%;\r\n\tmargin-left: -120px;\r\n}\r\n#login input[type=button] {\r\n\twidth: 80%;\r\n\theight: 30px;\t\r\n}\r\n#login label {\r\n\tdisplay: block;\r\n\tfont-size: 0.8em;\r\n}\r\n.CodeMirror-scroll {\r\n\t\/*width: inherit !important;*\/\r\n\t\/*max-width: 1800px !important;*\/\r\n\t\/*min-height: 800px !important;*\/\r\n\t\/*width: 1024px !important;*\/\r\n}\r\n.cm-matchhighlight {\r\n\tcolor: black !important;\r\n\tbackground-color: #97B89B;\r\n\tborder-radius: 2px;\r\n}\r\ntextarea {\r\n  font-family: inherit;\r\n  font-size: 0.9em;  \r\n}\r\n.cdegrid {\r\n\tborder: thin solid #A0A0A0;\r\n\tbackground-color: #FFFFFF;\r\n}\r\n.cdegrid input[type=button]{\r\n\tbackground-color: #558894;\r\n\tborder: 0.5em solid #558894;\r\n\tmargin: 2px;\r\n\tcolor: #FFF;\r\n\tcursor: pointer;\r\n}\r\n.cdegrid input[type=button]:hover{\r\n\tbackground-color: #77AAB6;\r\n}\r\n.cdegrid thead, .cdegrid th{\r\n\tbackground-color: #80AAC5;\r\n\tcolor: #404040;\r\n\tborder-left: thin solid #B0B0B0;\r\n    padding: 2px;\r\n\ttext-align: center !important;\r\n}\r\n.cdegrid .header {\r\n  background: #336688;\r\n  font-size: 2em;\r\n  padding: 10px 0px;\r\n  color: #fff;\r\n}\r\n.cdegrid tr:nth-child(2n) {\r\n    background-color: #C7C7C7;\r\n}\r\n.cdegrid tr[id*=&quot;grid&quot;] {\r\n    cursor: pointer;\r\n}\r\n.cdegrid td {\r\n\ttext-align: right;\r\n\tborder-left: thin solid #B0B0B0;\r\n    padding: 2px;\r\n}\r\n.cdegrid tfoot {\r\n    background-color: #CCCCCC;\r\n    border: thin solid #000000;\r\n    color: #666666;\r\n    padding: 3px;\r\n}\r\n.gridPopUp {\r\n\tbackground-color: rgba(255,255,255,0.9);\r\n    border: thin solid;\r\n    box-shadow: 0 0 1em;\r\n    margin-left: 30%;\r\n    padding: 1em;\r\n    position: absolute;\r\n    width: 40%;\r\n    z-index: 10;\r\n\ttop: 3em;\r\n}\r\n.gridPopUp .closeButton {\r\n    background-color: red;\r\n    color: white;\r\n    cursor: pointer;\r\n    height: 2em;\r\n    position: absolute;\r\n    right: 2px;\r\n    text-align: center;\r\n\tpadding-top: 6px;\r\n    top: 2px;\r\n    width: 2em;\r\n}\r\n.dataform label {\r\n\tdisplay: block;\r\n}\r\n.dataform hr {\r\n    border: 1px solid rgba(0, 0, 0, 0.2);\r\n    width: 100%;\r\n}\r\n.dataform img {\r\n    border: thin solid;\r\n    width: 25%;\r\n\ttransition: width 2s, height 2s;\r\n\t-webkit-transition: width 2s, height 2s; \/* Safari *\/\r\n}\r\n.cancel, .ok {\r\n\tcursor: pointer;\r\n\tmargin: 2px;\r\n}\r\n.dataform .cancel {\r\n    background-color: red;\r\n    border: medium solid red;\r\n    color: #FFFFFF;\r\n\tfloat: right;\r\n}\r\n.dataform .ok {\r\n    background-color: green;\r\n    border: medium solid green;\r\n    color: #FFFFFF;\r\n\tfloat: right;\r\n\twidth: 9em;\r\n}\r\n.main {\r\n  min-height: 900px;\r\n}"},{"recid":5,"SCRIPTID":"4","SCRIPTNAME":"Developer","CONTENT":"\/\/Development interface\n\/\/Andre#:Testing the development interface\n$scripttitle = $_SERVER[&quot;HTTP_HOST&quot;];\nif(isset($request[&quot;edtScriptName&quot;])){\n\tif($request[&quot;edtScriptName&quot;] != &quot;&quot;){\n\t\t$scripttitle .= &quot; &quot;.$request[&quot;edtScriptName&quot;];\n\t}\n}\n\n\/\/removing the following scripts will break the developement environment!\n$linkedsrc = &quot;&lt;script type=\\&quot;text\/javascript\\&quot; src=\\&quot;{$this-&gt;contextprefix}\/php4sack\/tw-sack.js\\&quot;&gt;&lt;\/script&gt;\n\t\t\t       &lt;link rel=\\&quot;stylesheet\\&quot; href=\\&quot;{$this-&gt;contextprefix}\/codemirror\/lib\/codemirror.css\\&quot;&gt;\n\t\t\t\t   &lt;link rel=\\&quot;stylesheet\\&quot; href=\\&quot;{$this-&gt;contextprefix}\/codemirror\/theme\/monokai.css\\&quot;&gt;\n\t\t\t\t   &lt;link rel=\\&quot;stylesheet\\&quot; href=\\&quot;{$this-&gt;contextprefix}\/codemirror\/addon\/dialog\/dialog.css\\&quot;&gt;\n                   &lt;script src=\\&quot;{$this-&gt;contextprefix}\/codemirror\/lib\/codemirror.js\\&quot;&gt;&lt;\/script&gt;\n\t\t\t\t   &lt;script src=\\&quot;{$this-&gt;contextprefix}\/codemirror\/addon\/edit\/closebrackets.js\\&quot;&gt;&lt;\/script&gt;\n\t\t\t\t   &lt;script src=\\&quot;{$this-&gt;contextprefix}\/codemirror\/addon\/edit\/matchbrackets.js\\&quot;&gt;&lt;\/script&gt;\n\t\t\t\t   &lt;script src=\\&quot;{$this-&gt;contextprefix}\/codemirror\/addon\/search\/searchcursor.js\\&quot;&gt;&lt;\/script&gt;\n\t\t\t\t   &lt;script src=\\&quot;{$this-&gt;contextprefix}\/codemirror\/addon\/search\/search.js\\&quot;&gt;&lt;\/script&gt;\n\t\t\t\t   &lt;script src=\\&quot;{$this-&gt;contextprefix}\/codemirror\/addon\/dialog\/dialog.js\\&quot;&gt;&lt;\/script&gt;\n\t\t\t\t   &lt;script src=\\&quot;{$this-&gt;contextprefix}\/codemirror\/addon\/search\/match-highlighter.js\\&quot;&gt;&lt;\/script&gt;\n\t\t\t\t   &lt;meta name=\\&quot;viewport\\&quot; content=\\&quot;width=device-width, initial-scale=1\\&quot; \/&gt;\n\t\t\t\t   &lt;meta name=\\&quot;apple-mobile-web-app-capable\\&quot; content=\\&quot;yes\\&quot;&gt;\n\t\t\t\t   &lt;meta name=\\&quot;apple-mobile-web-app-status-bar-style\\&quot; content=\\&quot;black-translucent\\&quot; \/&gt;\n\t\t\t\t   &lt;script type=\\&quot;text\/javascript\\&quot; src=\\&quot;{$this-&gt;contextprefix}\/jquery\/js\/jquery-1.9.1.js\\&quot;&gt;&lt;\/script&gt;\n\t\t\t\t   &lt;script type=\\&quot;text\/javascript\\&quot; src=\\&quot;{$this-&gt;contextprefix}\/jquery\/js\/jquery-ui-1.10.3.custom.js\\&quot;&gt;&lt;\/script&gt;\n\t\t\t\t   &lt;script type=\\&quot;text\/javascript\\&quot; src=\\&quot;{$this-&gt;contextprefix}\/jquery\/js\/touch-punch.js\\&quot;&gt;&lt;\/script&gt;\n\t\t\t\t   &lt;script type=\\&quot;text\/javascript\\&quot; src=\\&quot;{$this-&gt;contextprefix}\/jquery\/js\/jqtree.js\\&quot;&gt;&lt;\/script&gt;\n\t\t\t\t   &lt;script type=\\&quot;text\/javascript\\&quot; src=\\&quot;{$this-&gt;contextprefix}\/jquery\/js\/w2ui-1.3.js\\&quot;&gt;&lt;\/script&gt;\t\t\t\t  \n\t\t\t\t   &lt;link href=\\&quot;{$this-&gt;contextprefix}\/jquery\/css\/ui-lightness\/jquery-ui-1.10.3.custom.css\\&quot; rel=\\&quot;stylesheet\\&quot; \/&gt;\n\t\t\t\t   &lt;link href=\\&quot;{$this-&gt;contextprefix}\/jquery\/css\/ui-lightness\/w2ui-1.3.css\\&quot; rel=\\&quot;stylesheet\\&quot; \/&gt;\n\t\t\t\t   &lt;script type=\\&quot;text\/javascript\\&quot; src=\\&quot;{$this-&gt;contextprefix}\/ckeditor\/ckeditor.js\\&quot;&gt;&lt;\/script&gt;\n\t\t\t\t   &lt;meta charset=\\&quot;utf-8\\&quot;&gt;&quot;;\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t   \n\t\t\t   \n$html = $this-&gt;html_header(&quot;CDE-Developer - {$scripttitle}&quot;, &quot;Developercss&quot;, &quot;&quot;, &quot;&quot;, $linkedsrc, $bodyevent = &quot;&quot;, $formevent = &quot;onsubmit=\\&quot;return false\\&quot;&quot;);\n$html .= $this-&gt;html_ajaxhandler();\n$html .= $CDE-&gt;switchid (&quot;developid&quot;);\n$html .= $CDE-&gt;switchid (&quot;navigateid&quot;);\n\nif (!isset ($_SESSION[&quot;devloggedin&quot;])) {\n\t$_SESSION[&quot;devloggedin&quot;] = 0;\n}\n\nfunction show_login ($CDE) {\n\t$buttonevent = &quot;onclick=\\&quot;setdevelopid(200, true);\\&quot;&quot;;\n\t$html .= &quot;&lt;div id=\\&quot;login\\&quot;&gt;\n&lt;p&gt;Development Login&lt;\/p&gt;\t \n&lt;label for=\\&quot;edtEmail\\&quot;&gt;Email:&lt;\/label&gt;\n&quot;.$CDE-&gt;input(&quot;edtEmail&quot;, 200, &quot;Username&quot;).&quot;&lt;br \/&gt;\n&lt;label for=\\&quot;edtPassword\\&quot;&gt;Password:&lt;\/label&gt;\n&quot;.$CDE-&gt;input(&quot;edtPassword&quot;, 100, &quot;Password&quot;, &quot;&quot;, &quot;password&quot;).&quot; &lt;br \/&gt;\n&quot;.$CDE-&gt;input(&quot;edtSubmit&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;submit&quot;, &quot;Login&quot;, $buttonevent).&quot;  \t \t\t\t\n&lt;\/div&gt;&quot;;\n\treturn $html;\n}\n\n\nswitch ($request[&quot;developid&quot;]) {\n\tcase 100:\n\t$html .= show_login($CDE);\n\tbreak;\n\tcase 500:\n\tunset($_SESSION[&quot;devloggedin&quot;]);\n\tsession_write_close();\n\t$html .= setdevelopid(0, true);\n\tbreak;\n\tcase 200:\n\t$sqluser = &quot;select * from tbluser where email = ''{$request[&quot;edtEmail&quot;]}'' and status = 1&quot;;\n\t$user = $DEV-&gt;get_value (0, $sqluser);\n\t\n\tif ($user-&gt;EMAIL != &quot;&quot; &amp;&amp; crypt ($request[&quot;edtPassword&quot;], $user-&gt;PASSWD) == $user-&gt;PASSWD) {\n\t\t$_SESSION[&quot;devloggedin&quot;] = 1;\n\t\t$_SESSION[&quot;devuserid&quot;] = $user-&gt;USERID;\n\t\t$_SESSION[&quot;devusername&quot;] = $user-&gt;NAME;\n\t\t$_SESSION[&quot;devemail&quot;] = $user-&gt;EMAIL;\n\t\t\n\t\t\/\/update the table\n\t\t\n\t\t$sqlupdate = &quot;update tbluser set sessionid = ? where userid = ?&quot;;\n\t\t$DEV-&gt;exec ($sqlupdate, session_id(), $user-&gt;USERID);\n\t\t\n\t\tsession_write_close();\n\t\t$html .= setdevelopid (0, true);\n\t}\n\telse {\n\t\t$html .= setdevelopid (100, true);\n\t}  \n\tbreak;\n\tdefault:\n\tif ($_SESSION[&quot;devloggedin&quot;] != 1) {\n\t\t$html .= setdevelopid (100, true);\n\t}\n\telse {\n\t\n\t    if ($_REQUEST[&quot;content&quot;] == &quot;openscript&quot;) {\n\t\t\n\t\t  $_REQUEST[&quot;moduleprocessid&quot;] = 300;\n\t\t  $_REQUEST[&quot;scriptprocessid&quot;] = 110;\n\t\t  if ($_REQUEST[&quot;interfaceid&quot;] == 9999999) {\n\t\t    $_REQUEST[&quot;interfaceid&quot;] = &quot;&quot;;\n\t\t  }\n\t\t\n\t\t}\n\t\t else \n\t\tif ($_REQUEST[&quot;content&quot;] == &quot;scriptoverview&quot;) {\n\t\t  $_REQUEST[&quot;navigateid&quot;] = 700;\n\t\t} \n\t\t \n\t\t else\n\t\tif ($_REQUEST[&quot;content&quot;] == &quot;deletescript&quot;) {\n\t\t  $DEV-&gt;exec (&quot;delete from tblscript where scriptid = {$_REQUEST[&quot;scriptid&quot;]}&quot;); \n\t\t  \n\t\t  echo script (&quot;location.href = ''\/release\/{$_REQUEST[&quot;release&quot;]}\/interface\/Developer\/'';&quot;);\n\t\t \n\t\t} \n\t\t\n\t\t\n\t\t$html .= &quot;&lt;nav class=\\&quot;navmain\\&quot;&gt;\n&lt;a href=\\&quot;javascript:void(0)\\&quot; onclick=\\&quot;setnavigateid(100, true);\\&quot;&gt;Interfaces&lt;\/a&gt;\n&lt;a  href=\\&quot;javascript:void(0)\\&quot; onclick=\\&quot;setnavigateid(200, true);\\&quot;&gt;Database Admin&lt;\/a&gt;\n&lt;a  href=\\&quot;javascript:void(0)\\&quot; onclick=\\&quot;if (document.forms[0].scriptid) { setscriptprocessid(''0'', false); setscriptid(''0'', false); } setnavigateid(300, true);\\&quot;&gt;Functions&lt;\/a&gt;\n&lt;a  href=\\&quot;javascript:void(0)\\&quot; onclick=\\&quot;setnavigateid(400, true);\\&quot;&gt;Users&lt;\/a&gt;\n&lt;a  href=\\&quot;javascript:void(0)\\&quot; onclick=\\&quot;setnavigateid(600, true);\\&quot;&gt;Documentation&lt;\/a&gt;\n&lt;a  href=\\&quot;javascript:void(0)\\&quot; onclick=\\&quot;setnavigateid(700, true);\\&quot;&gt;Code Map&lt;\/a&gt;\n&lt;a  href=\\&quot;javascript:void(0)\\&quot; onclick=\\&quot;setnavigateid(800, true);\\&quot;&gt;Update Environment&lt;\/a&gt;\n&lt;a  href=\\&quot;javascript:void(0)\\&quot; onclick=\\&quot;setdevelopid(500, true);\\&quot;&gt;Logout&lt;\/a&gt;{$_SESSION[&quot;devusername&quot;]}&lt;\/nav&gt;&quot;;\n\t\t\n\t\t$html .= &quot;&lt;div class=\\&quot;main\\&quot;&gt;&quot;; \n\t\t\n\t\tswitch ($_REQUEST[&quot;navigateid&quot;]) {\n\t\t\tcase 600:\n\t\t\t  $html .= &quot;&lt;iframe src=\\&quot;\/documentation\/doku.php\\&quot; width=\\&quot;100%\\&quot; height=\\&quot;800px\\&quot;&gt;&lt;\/iframe&gt;&quot;;\t\t\t\n\t\t\tbreak;\n\t\t\tcase 700:\n\t\t\t  $codemap = &quot;&quot;.new TCodeMap ($DEV, $request, $this-&gt;cdedev);\n\t\t\t  $html .= div ( array (&quot;style&quot; =&gt; &quot;padding: 30px;&quot;),  $codemap );\n\t\t\tbreak;\n\t\t\tcase 200:\n\t\t\t$request[&quot;moduleprocessid&quot;] = 500;\n\t\t\tif ($request[&quot;moduleprocessid&quot;] != 500) {\n\t\t\t\t\n\t\t\t\t$request[&quot;scriptprocessid&quot;] = 0;\n\t\t\t\t$request[&quot;scriptid&quot;] = '''';\n\t\t\t}\t \n\t\t\t$script = new dev_sql ($DEV, $request, $this-&gt;cdedev, $this-&gt;contextprefix);\n\t\t\t\/\/load the module view\n\t\t\t$html .= &quot;&lt;div&gt;&quot;.$script.&quot;&lt;\/div&gt;&quot;;\n\t\t\tbreak;\n\t\t\tcase 300:\n\t\t\t$request[&quot;moduleprocessid&quot;] = 400;\n\t\t\t\n\t\t\t\n\t\t\t$script = new dev_script ($DEV, $request, $this-&gt;cdedev, &quot;&quot;,  $this-&gt;contextprefix);\n\t\t\t\n\t\t\t\/\/load the module view\n\t\t\t$html .= &quot;&lt;div&gt;&quot;.$script.&quot;&lt;\/div&gt;&quot;;\n\t\t\tbreak;\n\t\t\tcase 400:\n\t\t\t\n\t\t\t$usermodule = new dev_user ($DEV, $request);\n\t\t\t$html .= &quot;&lt;div&gt;&quot;.$usermodule.&quot;&lt;\/div&gt;&quot;;\n\t\t\tbreak;\n\t\t\tcase 800:\n\t\t\t  $html .= new TUpdateMe ($DEV, $request, $this-&gt;cdedev);\n\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\/\/call up the interfaces screen \n\t\t\t$interface = new dev_interface ($DEV, $request); \n\t\t\t$html .= &quot;&lt;nav class=\\&quot;navinterface\\&quot;&gt;&quot;.$interface.&quot;&lt;\/nav&gt;&quot;;\n\t\t\t\n\t\t\tif (!isset($request[&quot;interfaceid&quot;])) {\n\t\t\t\t$interfaceid = $DEV-&gt;get_value (0, &quot;select * from tblinterface order by name&quot;);\n\t\t\t\t$request[&quot;interfaceid&quot;] = $interfaceid-&gt;INTERFACEID;\n\t\t\t}\n\t\t\t\n\t\t\t\/\/determine what to load here\n\t\t\t$module = new dev_module ($DEV, $request, $request[&quot;interfaceid&quot;], $this-&gt;cdedev) ;\n\t\t\t$script = new dev_script ($DEV, $request, $this-&gt;cdedev, $request[&quot;interfaceid&quot;], $this-&gt;contextprefix);\n\t\t\t\n\t\t\t\/\/load the module view\n\t\t\t$html .= &quot;&lt;div class=\\&quot;sideBar\\&quot;&gt;&quot;.$module.&quot;&lt;\/div&gt;&lt;div class=\\&quot;scriptArea\\&quot;&gt;&quot;.$script.&quot;&lt;\/div&gt;&quot;;\n\t\t\t\n\t\t\tbreak; \n\t\t\t\n\t\t\t\n\t\t}\n\t\t\n\t\t$html .= &quot;&lt;\/div&gt;&quot;; \n\t\t\n\t}\n\t\n\t\n\tbreak;\n}\n$html .= $this-&gt;html_footer(false, false);"},{"recid":6,"SCRIPTID":"7","SCRIPTNAME":"Public","CONTENT":"\/\/Andre: The headers here allow for things to automate your html headers with the includes needed\n$html .= $this-&gt;html_header (&quot;TINA4 - This Is Not A 4ramework &quot;, &quot;Publiccss&quot;);\n$html .= $this-&gt;html_ajaxhandler();\n\n$html .= h1(&quot;Welcome to TINA4&quot;);\n\n$li[] = li ( a (array (&quot;target&quot; =&gt; &quot;_blank&quot;, &quot;href&quot; =&gt; &quot;?interface=Developer&quot; ), &quot;Login to the development environment using email: admin &amp; password: admin&quot;) );\n$li[] = li ( a (array (&quot;target&quot; =&gt; &quot;_blank&quot;, &quot;href&quot; =&gt; &quot;help.php&quot; ), &quot;Help for using the Shape Language&quot; ) );\n$li[] = li ( a (array (&quot;target&quot; =&gt; &quot;_blank&quot;, &quot;href&quot; =&gt; &quot;?interface=Example&quot; ), &quot;An Example Application using TINA 4&quot; ) );\n\n\n$html .= ul ( $li );\n\n\/\/Andre: This footer is for debugging, the first parameter displays session and request information, the second is to refresh SASS without reloading the screen.\n$html .= $this-&gt;html_footer(true, true);"},{"recid":7,"SCRIPTID":"8","SCRIPTNAME":"W2UI Components","CONTENT":"   \/*\r\n  WU2i Form\r\n\r\n  Example:\r\n  \r\n  \r\n*\/\r\nfunction w2ui_form ($name, $title=&quot;My Form&quot;, $elements=null, $buttons=null,  $record=null, $style=&quot;&quot;, $page=0, $action=&quot;&quot;, $method=&quot;post&quot;, $savescript=&quot;&quot;, $noformelement=false) {\r\n\r\n\r\n\r\n if ($buttons != &quot;&quot;) {\r\n    $abuttons[] = div ( array(&quot;class&quot; =&gt; &quot;w2ui-buttons&quot;), $buttons);\r\n  }\r\n  \r\n  \/\/$name .= rand (1000, 9999);\r\n  if ($record != null) {\r\n    \r\n    $elements[] = textarea ( array(&quot;name&quot; =&gt; &quot;EDIT&quot;.$name, &quot;style&quot; =&gt; &quot;display:none&quot;), json_encode ( $record) );\r\n  }\r\n  \r\n  if ($title != &quot;&quot;)  {\r\n    $aheader = div ( $title, array ( &quot;class&quot; =&gt; &quot;w2ui-form-header&quot; ) );\r\n  }\r\n  \r\n  $pageno = &quot;w2ui-page page-{$page}&quot;;\r\n  \r\n  $apage[] =   div ( array ( &quot;class&quot; =&gt; $pageno) , $elements\t\t\r\n\t\t\t\t\t );\r\n\t \r\n  $fields = &quot;&quot;;\r\n  \r\n \/\/ print_r ($elements);\r\n  \/\/see if we have an array of just an object, make object into an array for the walking\r\n  if (is_object($elements)) {\r\n    $newelement[] = $elements;\r\n  }\r\n    else {\r\n    $newelement = $elements;\r\n  }\r\n  \r\n  $newelement = array_flatten ($newelement);\r\n  $lookups = array();\r\n  \r\n  \r\n  foreach ($newelement as $eid =&gt; $element) {\r\n    \r\n\tif ( is_object ($element) ){\r\n\t\t$children = $element-&gt;get_children();\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\t\t\t\r\n\t\tforeach ($children as $cid =&gt; $child) {\r\n\t\t     \r\n\t\t       if ($child-&gt;get_type() == &quot;date&quot; || $child-&gt;get_type() == &quot;upload&quot; || $child-&gt;get_type() == &quot;float&quot; || $child-&gt;get_type() == &quot;money&quot; ||$child-&gt;get_type() == &quot;int&quot; || $child-&gt;get_type() == &quot;input&quot; || $child-&gt;get_type() == &quot;textarea&quot;  || $child-&gt;get_type() == &quot;checkbox&quot; || $child-&gt;get_type() == &quot;password&quot; || $child-&gt;get_type() == &quot;list&quot; || $child-&gt;get_type() == &quot;enum&quot; || $child-&gt;get_type() == &quot;select&quot;) {\r\n\t\t\t\t\t  $input = array();\r\n\t\t\t\t\t  $input[&quot;name&quot;] = $child-&gt;get_name();\r\n\t\t\t\t\t  $type = $child-&gt;get_type();\r\n\t\t\t\t\t  if ($type == &quot;input&quot;) $type = &quot;text&quot;;\r\n\t\t\t\t\t  $input[&quot;type&quot;] = $type; \r\n\t\t\t\t\t  $items = $child-&gt;get_attribute (&quot;items&quot;);\r\n\t\t\t\t\t  \r\n\t\t\t\t\t  if($type == &quot;upload&quot;){\r\n\t\t\t\t\t  \t $input[&quot;options&quot;][&quot;url&quot;] = $child-&gt;get_attribute (&quot;url&quot;);\r\n\t\t\t\t\t\t $input[&quot;options&quot;][&quot;base64&quot;] = true;\r\n\t\t\t\t\t\t if($child-&gt;get_attribute (&quot;hint&quot;)){\r\n\t\t\t\t\t\t \t$input[&quot;options&quot;][&quot;hint&quot;] = $child-&gt;get_attribute (&quot;hint&quot;);\r\n\t\t\t\t\t\t }\r\n\t\t\t\t\t  }\r\n\t\t\t\t\t  if($child-&gt;get_type() == &quot;date&quot;){\r\n\t\t\t\t\t  \tif($child-&gt;get_attribute(&quot;start&quot;)){\r\n\t\t\t\t\t\t\t$input[&quot;options&quot;][&quot;start&quot;] = $child-&gt;get_attribute(&quot;start&quot;);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif($child-&gt;get_attribute(&quot;format&quot;)){\r\n\t\t\t\t\t\t\t$input[&quot;options&quot;][&quot;format&quot;] = $child-&gt;get_attribute(&quot;format&quot;);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t  }\t\t\t\t\t  \r\n\t\t\t\t\t  if ($items != &quot;&quot;) {\r\n\t\t\t\t\t   \r\n\t\t\t\t\t\t$input[&quot;options&quot;][&quot;items&quot;] = &quot;|item{$input[&quot;name&quot;]}|&quot;;\r\n\t\t\t\t\t\t$lookups[&quot;item{$input[&quot;name&quot;]}&quot;] = $items;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif ($type == &quot;list&quot;) {\t\t\t\r\n\t\t\t\t\t      $input[&quot;type&quot;] =   &quot;list&quot;;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t  $input[&quot;type&quot;] =   &quot;enum&quot;;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t  }\r\n\t\t\t\t\t  \r\n\t\t\t\t\t  \r\n\t\t\t\t\t  $input[&quot;required&quot;] = $child-&gt;get_required();\r\n\t\t\t\t\t  $fields[] = $input;\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\r\n\t\t}\r\n\t}\r\n  }\r\n  \r\n  \r\n  if ($fields != &quot;&quot;) {\r\n     $fields = &quot;fields:&quot;.json_encode ($fields);\r\n\t \r\n\t \/\/print_r ($lookups);\r\n\t foreach ($lookups as $id =&gt; $value) {\r\n\t   $fields = str_replace (&quot;\\&quot;|&quot;.$id.&quot;|\\&quot;&quot;, json_encode ($value), $fields); \r\n\t }\r\n  }\r\n  \r\n \r\n  $script[] = script ( ''$(function () {    if (w2ui[&quot;''.$name.''&quot;] == undefined) { $(&quot;#''.$name.''&quot;).w2form( { id: &quot;''.$name.''&quot;, name: &quot;''.$name.''&quot;, focus: 0, header: &quot;''.$title.''&quot;, ''.$fields.'' } ) } else {   } } )'' );\r\n  if ($record != null) {\r\n    $script[] =  script ( ''w2ui[&quot;''.$name.''&quot;].record = $.extend (true, {}, ''.json_encode ($record).'' );'' );\r\n    \r\n  }\r\n  \r\n\r\n  $formname = &quot;{$name}&quot;;\r\n  $divs = div ( array(&quot;id&quot; =&gt; $formname, &quot;style&quot; =&gt; $style ), $aheader,  $apage, $abuttons, $script );\r\n  \r\n  if ($noformelement) {\r\n    $html .= $divs-&gt;compile_html();\r\n  }  else {\r\n    $html .= form (array (&quot;name&quot; =&gt; ''form''.$name, &quot;action&quot; =&gt; $action, &quot;method&quot; =&gt; $method, &quot;enctype&quot; =&gt; &quot;multipart\/form-data&quot;, &quot;onsubmit&quot; =&gt; &quot;return false&quot;), $divs);\r\n  }\t\r\n  return $html;\r\n}\r\n\r\n\/*\r\n  WU2i Input\r\n  \r\n  Example:\r\n  \r\n*\/\r\nfunction w2ui_input ($title, $name, $placeholder, $params=null, $type=&quot;text&quot;, $standalone=false, $extraparams=null) {\r\n\r\n   if (!$standalone &amp;&amp; $title != &quot;&quot;) {\r\n     $elements[] = div (array(&quot;class&quot; =&gt; &quot;w2ui-label&quot;), $title.&quot;:&quot;);\r\n   }\r\n   \r\n   switch ($type) {\r\n     case &quot;text&quot;:\r\n\t case &quot;email&quot;:\r\n\t case &quot;password&quot;:\r\n\t case &quot;color&quot;:\r\n\t   $atype = $type;\r\n\t   if ($type == &quot;color&quot;) $atype = &quot;text&quot;;\r\n       $input = input (array (&quot;id&quot; =&gt; $name, &quot;name&quot; =&gt; $name, &quot;type&quot; =&gt; $atype, &quot;placeholder&quot; =&gt; $placeholder), $params);\r\n\t break;\r\n\t case &quot;date&quot;:\r\n\t \t$input = input (array(&quot;id&quot; =&gt; $name, &quot;name&quot; =&gt; $name, &quot;type&quot; =&gt; &quot;text&quot;, &quot;placeholder&quot; =&gt; $placeholder), $params);\r\n\t\t$input-&gt;set_type(&quot;date&quot;);\r\n\t break;\r\n\t case &quot;enum&quot;:\r\n\t   $input = input (array (&quot;id&quot; =&gt; $name, &quot;name&quot; =&gt; $name, &quot;type&quot; =&gt; &quot;text&quot;, &quot;placeholder&quot; =&gt; $placeholder), $params );\r\n\t break;\r\n\t case &quot;list&quot;:\r\n\t   $input = select (array (&quot;id&quot; =&gt; $name, &quot;name&quot; =&gt; $name,  &quot;placeholder&quot; =&gt; $placeholder, &quot;type&quot; =&gt; &quot;list&quot;), $params );\r\n\t break;\r\n\t case &quot;checkbox&quot;:\r\n\t   $input = input (array (&quot;id&quot; =&gt; $name, &quot;name&quot; =&gt; $name,  &quot;type&quot; =&gt; $type), $params );\r\n\t break;\r\n\t case &quot;textarea&quot;:\r\n\t   $input = textarea (array (&quot;name&quot; =&gt; $name, &quot;placeholder&quot; =&gt; $placeholder), $value, $params);\r\n\t break;\r\n\t default:\r\n\t   $input = input (array (&quot;id&quot; =&gt; $name, &quot;name&quot; =&gt; $name, &quot;type&quot; =&gt; $type, &quot;placeholder&quot; =&gt; $placeholder), $params);\r\n\t   $input-&gt;set_type ($type);\r\n\t break;\r\n   }\r\n   \r\n   $scripts = array();\r\n   if ($standalone) {\r\n     $items = &quot;&quot;;\r\n     if ($type == &quot;enum&quot; || $type == &quot;list&quot;) {\r\n\t    $items = &quot;, items: &quot;.json_encode ($params[&quot;items&quot;]);\r\n\t }\r\n\t \r\n\t $options = &quot;&quot;;\r\n\t if ($type == &quot;date&quot;) {\r\n\t    if ($params[&quot;format&quot;] != &quot;&quot;) {\r\n\t     $options = &quot;, format: ''&quot;.$params[&quot;format&quot;].&quot;''&quot;;\r\n\t   }\r\n\t }\r\n\t if ($params[&quot;value&quot;] != &quot;&quot;) {\r\n\t   $value = &quot;$(''#{$name}'').val(''&quot;.$params[&quot;value&quot;].&quot;'');&quot;;\r\n\t } \r\n     $script = script (&quot;$(function() {  $(''#{$name}'').w2field (  {  type: ''{$type}''{$options}{$items}} ); {$value}  });&quot;);  \r\n\t \r\n\t return $title.$input.$script;\r\n   }\r\n    else {    \r\n     $elements[] = div (array(&quot;class&quot; =&gt; &quot;w2ui-field&quot;), $input, $scripts);\r\n   }\r\n   return $elements;\t\r\n}\r\n\r\n\r\n\/*\r\n  WU2i Grid\r\n  \r\n  Example:\r\n  \r\n*\/\r\n\r\nfunction w2ui_grid ($title, $name, $columns, $datapath, $width=&quot;100%&quot;, $height=&quot;100%&quot;, $hastoolbar=true, $hasfooter=true, $multiselect=false, $onclick=&quot;&quot;) {\r\n  \r\n  $show = array();\r\n  if ($hastoolbar) {\r\n    $show[&quot;toolbar&quot;] = true;\r\n  }\r\n  if ($hasfooter) {\r\n    $show[&quot;footer&quot;] = true;\r\n  }\t\r\n  if ($multiselect) {\r\n    $show[&quot;selectColumn&quot;] = true;\r\n  }\r\n \r\n  $currentrecord = 0;\r\n  if ($_REQUEST[&quot;sel&quot;.$name]) {\r\n    $record = json_decode($_REQUEST[&quot;sel&quot;.$name]);\r\n\t$currentrecord = $record-&gt;recid;\r\n  }\r\n  \r\n  $script = ''\r\n    $(&quot;#''.$name.''&quot;).w2destroy(&quot;''.$name.''&quot;);\r\n    $(&quot;#''.$name.''&quot;).w2grid ({\r\n\t  name: &quot;''.$name.''&quot;,\r\n\t  header: &quot;''.$title.''&quot;,\r\n\t  multiSelect: true,\r\n\t  style: &quot;height: ''.$height.''; width: ''.$width.''&quot;,\r\n\t  '';\r\n\t  \r\n  if (count ($show) &gt; 0) {\r\n    $script .= ''show: ''.json_encode ( $show ).'','';\r\n  }\r\n  \r\n  if (count ($columns) &gt; 0 ) {\r\n    $script .= ''columns: '';\r\n\t$gridcolumns = json_encode ( $columns );\r\n\t$gridcolumns = str_replace(array(''_&quot;'', ''&quot;_''), '''', $gridcolumns);\r\n\t$script .= $gridcolumns;\r\n  }\r\n  \r\n  \r\n  $script .= '',\r\n      onClick: function (event) {\r\n\t\t\t\t\tvar record = this.get(event.recid);\r\n\t\t\t\t\tconsole.log(record);\r\n\t\t\t\t\tvar sel = this.getSelection();\r\n\t\t\t\t\tdocument.getElementById (&quot;sel''.$name.''&quot;).value = JSON.stringify(record);\r\n\t\t\t\t\t ''.$onclick.'' \r\n\t             } ,\t\t \r\n       onLoad: function (event) {\r\n\t\t\tevent.onComplete = function () {\r\n\t\t\t\t\/\/ event actions\r\n\t\t\t\tthis.select (''.$currentrecord.'');\r\n\t\t\t\tvar record = this.get(''.$currentrecord.'');\r\n\t\t\t\tvar sel = this.getSelection();\r\n\t\t\t\t\r\n\t\t\t\tif(record !== undefined){\r\n\t\t\t\t\tdocument.getElementById (&quot;sel''.$name.''&quot;).value = JSON.stringify(record);\r\n\t\t\t\t\tconsole.log (document.getElementById (&quot;sel''.$name.''&quot;).value);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\t});\r\n\t\r\n\tw2ui[&quot;''.$name.''&quot;].load(&quot;''.$datapath.''&quot;);\r\n  '';\r\n  $aname = &quot;sel{$name}&quot;;\r\n  $html = textarea (array (&quot;id&quot; =&gt; $aname, &quot;name&quot; =&gt; $aname, &quot;style&quot; =&gt; &quot;display: none&quot;), htmlentities($_REQUEST[$aname]) );\r\n  $html .= div (array(&quot;id&quot; =&gt; $name, \r\n                          &quot;style&quot; =&gt; &quot;width: 100%; height: 350px;&quot;\r\n\t\t\t\t\t\t )\r\n\t\t\t\t);\r\n  \r\n  $html .= script ( $script );\r\n  \r\n  \/\/mail (''andre@spiceware.co.za'', ''Grid Code'', $script);\r\n  \r\n\r\n  return $html;\r\n}\r\n\r\n\r\n\/*W2UI FIELD FOR GRID =======================================*\/\r\nfunction w2ui_column ($caption, $fieldname=&quot;&quot;,  $size=&quot;&quot;, $alignment=&quot;left&quot;, $sortable=true, $resizable=true, $editable=null, $render=null) {\r\n  $field = array();\r\n  $field[&quot;field&quot;] = $fieldname;\r\n  $field[&quot;caption&quot;] = $caption;\r\n  if ($size != &quot;&quot;) {\r\n    $field[&quot;size&quot;] = $size;\r\n  }\r\n  $field[&quot;sortable&quot;] = $sortable;\r\n  $field[&quot;resizable&quot;] = $resizable;  \r\n  $field[&quot;attr&quot;] = &quot;align={$alignment}&quot;;\r\n  if($editable != null){\r\n  \t$field[&quot;editable&quot;] = $editable;\r\n  }\r\n  if($render != null){\r\n  \t$field[&quot;render&quot;] = &quot;_&quot;.$render.&quot;_&quot;;\r\n  }\r\n  return $field;\r\n}\r\n\/*END W2UI FIELD ===================================*\/\r\n\r\n\/*W2UI FIELD FOR GRID =======================================*\/\r\nfunction w2ui_parse_data ($result, $fieldinfo) {\r\n  $data = array();\r\n  $data[&quot;total&quot;] = count ($result);\r\n   \r\n  foreach ($result as $rid =&gt; $record) {\r\n      $rec = array ();\r\n\t  $rec[&quot;recid&quot;] = $rid+1;\r\n\t  foreach ($fieldinfo as $fid =&gt; $field) {\r\n\t    \r\n\t    $rec[$field[&quot;name&quot;]] = htmlentities($record-&gt;$field[&quot;name&quot;]);     \r\n\t  }\r\n\t  $data[&quot;records&quot;][] = $rec;\r\n\t  \r\n  }\r\n  return json_encode ($data);\r\n}\r\n\/*END W2UI FIELD ===================================*\/\r\n\r\n\r\n\/*W2UI FIELD FOR GRID =======================================*\/\r\nfunction w2ui_popup ($caption, $elements, $width=&quot;800px&quot;, $height=&quot;600px&quot;, $showmax=false, $modal=false, $onopen=&quot;&quot;) {\r\n  \r\n  $params[&quot;title&quot;] = $caption;\r\n   \r\n  $body = div ($elements);\t\t\t\t\r\n  \r\n  $params[&quot;body&quot;] = $body-&gt;compile_html();\r\n  $params[&quot;width&quot;] = $width;\r\n  $params[&quot;height&quot;] = $height;\r\n  if($onopen != &quot;&quot;){\r\n  \t$params[&quot;onOpen&quot;] = &quot;_function(event){ &quot;.$onopen.&quot; }_&quot;;\r\n  }\r\n  $params[&quot;showMax&quot;] = $showmax;\r\n  $params[&quot;modal&quot;] = $modal;\r\n  \r\n  $script = &quot;w2popup.open ( &quot;.json_encode ($params).&quot; );&quot;;\r\n  $script = str_replace(array(''_&quot;'', ''&quot;_''), '''', $script);\r\n  $html = script ($script);\r\n  return $html;\r\n}\r\n\r\n\/*END W2UI FIELD ===================================*\/\r\n\r\n\/*W2UI TAB START =======================================*\/\r\nfunction w2ui_tabs ($name=&quot;tab&quot;, $tabs=array(), $width=&quot;100%&quot;, $onclick=&quot;&quot;, $active=&quot;&quot;, $onclose=&quot;&quot;) {\r\n  $html  = div ( array(&quot;id&quot; =&gt; $name, &quot;style&quot; =&gt; &quot;width: {$width}&quot; ) );\r\n    \r\n  $atabs = array ();\r\n  \r\n  foreach ($tabs as $tid =&gt; $tab) {\r\n     $atab = array();\r\n\t $atab[&quot;id&quot;] = $name.$tid;\r\n\t if ($active == &quot;&quot;) $active = $atab[&quot;id&quot;];\r\n\t if ($active == $tid) $active = $atab[&quot;id&quot;];\t \r\n\t $atab[&quot;caption&quot;] = $tab;\r\n\t $atabs[] = $atab;\r\n  }\r\n  \r\n  if($onclose != &quot;&quot;){\r\n  \t$onclose = &quot;,onClose: function(event){ &quot;.$onclose.&quot; }&quot;;\r\n  }\r\n  \r\n  $html .= script ( &quot;\r\n                $(function ()  {\r\n\t\t\t\t     \r\n\t\t\t\t\t if (w2ui[''{$name}''] !== undefined) w2ui[''{$name}''].destroy();\r\n\t\t\t\t\t $(''#{$name}'').w2tabs({\r\n\t\t\t\t\t  name: ''{$name}'',\r\n\t\t\t\t\t  active: ''{$active}'',\r\n\t\t\t\t\t  tabs: &quot;.json_encode ($atabs).&quot;,\r\n\t\t\t\t\t  onClick: function (event) {\r\n\t\t\t\t\t     {$onclick}\r\n\t\t\t\t\t  }\r\n\t\t\t\t\t  {$onclose}\r\n\t\t\t\t    });\r\n\t\t\t\t  }\r\n\t\t\t\t);\r\n               &quot; );\r\n  \r\n  \r\n  return $html;\r\n}\r\n\r\n\/*END W2UI TAB ===================================*\/\r\n\r\n\r\n\/*W2UI NODE START =======================================*\/\r\n\r\nfunction w2ui_sidebar_node ($name=&quot;&quot;, $caption=&quot;Default&quot;, $img=&quot;fa-star&quot;, $group=false, $expanded=false, $subnodes=array()) {\r\n  $node = array();\r\n  $node[&quot;id&quot;] = $name;\r\n  $node[&quot;text&quot;] = $caption;\r\n  $node[&quot;group&quot;] = $group;\r\n  if ($group) {\r\n    $node[&quot;img&quot;] = $img;\r\n  }\r\n    else {\r\n\t$node[&quot;icon&quot;] = $img; \r\n  }\t\r\n  $node[&quot;expanded&quot;] = $expanded;\r\n  if (count ($subnodes) &gt; 0) {\r\n    $node[&quot;nodes&quot;] = $subnodes;\r\n  }\r\n  \r\n  return $node;  \r\n}\r\n\/*W2UI NODE END =======================================*\/\r\n\r\n\r\n\/*W2UI SIDEBAR START =======================================*\/\r\nfunction w2ui_sidebar ($name=&quot;&quot;, $width=&quot;200px&quot;, $height=&quot;300px&quot;, $nodes, $onclick=&quot;&quot;) {\r\n   $html = div (array (&quot;id&quot; =&gt; $name, &quot;style&quot; =&gt; &quot;width: {$width}; height: {$height};&quot;));\r\n   $html .= script (\r\n      &quot; $(function () {\r\n\t      $(''#{$name}'').w2sidebar ({\r\n\t\t     name: ''{$name}'',\r\n\t\t\t nodes: &quot;.json_encode ($nodes).&quot;\r\n          });\r\n          w2ui.{$name}.on (''*'', function (event) { \r\n\t\t    {$onclick}\r\n\t\t  }  \r\n\t\t  );\t\t  \r\n\t    });\r\n\t  &quot;   \r\n   );  \t\r\n   return $html;\r\n}\r\n\/*W2UI SIDEBAR END =======================================*\/\r\n\r\n\r\n\r\n\/*CKEDITOR =======================================*\/\r\nfunction ckeditor ($name, $value=&quot;&quot;, $onblurevent=&quot;&quot;) {\r\n  \r\n   $html .= textarea (array(&quot;name&quot; =&gt; $name, &quot;id&quot; =&gt; $name), $value);\r\n   $html .= script (&quot;CKEDITOR.replace(''{$name}'');\r\n                               function ckeditor_{$name}data(){\r\n\t\t\t\t\t\t\t    if(CKEDITOR.instances.{$name}.getData() &amp;&amp; document.getElementById(''{$name}'') !== null){\r\n\t\t\t\t\t\t\t        document.getElementById(''{$name}'').value = CKEDITOR.instances.{$name}.getData();\r\n\t\t\t\t\t\t\t    }\r\n\t\t\t\t\t\t\t\treturn document.getElementById(''{$name}'').value;\r\n\t\t\t\t\t\t  }&quot;);\r\n  if ($onblurevent != &quot;&quot;) {\r\n    $html .= script ( &quot;CKEDITOR.instances.{$name}.on (''blur'', function() { &quot;.str_replace (&quot;\\n&quot;, &quot; &quot;, $onblurevent).&quot; }); &quot;);\r\n  }\r\n\t\t\t\t\t\t  \r\n   return $html;\r\n}\r\n\/*END CKEDITOR ===================================*\/\r\n\r\n\r\n\/*W2UI OPTIONS FOR LIST\/ENUM =======================================*\/\r\nfunction w2ui_items ( $CDE, $lookupsql ) {\r\n\t$lookuprow = $CDE-&gt; get_row ( $lookupsql , 1 );\r\n\t$lookupitems = array(&quot;&quot;);\r\n\tforeach ( $lookuprow as $irow=&gt;$row){\r\n\t\t$lookupitems[$row[0]] = $row[1];\r\n\t}\r\n\treturn $lookupitems;\r\n}\r\n\r\n\/*END W2UI OPTIONS ===================================*\/\r\n\r\n\r\n"},{"recid":8,"SCRIPTID":"10","SCRIPTNAME":"Publiccss","CONTENT":"$font-stack:    Helvetica, sans-serif;\n$primary-color: red;\n\nbody {\n  font: 100% $font-stack;\n  color: $primary-color;\n}"},{"recid":9,"SCRIPTID":"11","SCRIPTNAME":"TCodeMap","CONTENT":"\/\/Andre#:New code map for development environment encapsulates todo lists and release notes\r\n\/\/this is a class to draw out the coding map\r\n\/\/Testing the updating of the system\r\nclass TCodeMap {\r\n   private $CDE;\r\n   private $request;\r\n   private $cdedev;\r\n \r\n   \/\/This is the constructior\r\n   function __construct ($CDE, $request, $cdedev) {\r\n       $this-&gt;CDE = $CDE;\r\n\t   $this-&gt;request = $request;\r\n\t   $this-&gt;cdedev = $cdedev;\r\n   }\r\n   \r\n   \r\n   \/\/This is the string function\r\n   function __toString () {\r\n      return $this-&gt;draw();   \r\n   }\r\n   \r\n   \r\n   \/\/function to get the class names and methods\r\n   function get_class_info ($aname) { \r\n\t \r\n\t $classmethods = get_class_methods ($aname);\r\n\t \r\n\t  foreach ($classmethods as $cid =&gt; $classmethod) {\r\n         $arguments = get_classfunction_arguments ( $aname , $classmethod);\r\n\t\t $listitems[] = li ( &quot;&lt;b&gt; {$classmethod} &lt;\/b&gt; (&quot;.implode (&quot;, &quot;, $arguments).&quot;)&quot; );\r\n\t  }\r\n\t    \r\n      return $listitems;\r\n   }\r\n   \r\n   \r\n\t\r\n\t\/\/function to get all the params from code, we are interested in class, function declarations, comments and comments with todos\r\n\tfunction get_php_code_elements ( $content ) {\r\n\t  \r\n\t  $functions = array();\r\n\t  $classes = array();\r\n\t  $comments = array();\r\n\t  $todos = array ();\r\n\t  $releasenotes = array();\r\n\t  $lookups = array ();\r\n\t  \r\n\t  \r\n\t  $content = ''&lt;''.''?php''.&quot;\\n&quot;.$content.&quot;\\n&quot;.''?''.''&gt;'';\r\n\t  $tokens = token_get_all ( $content );\r\n\t  \r\n\t  \/\/print_r ($tokens);\r\n\t  \/\/a function or a class that has a comment above its header has a * before the name\r\n\t  \t  \t  \r\n\t  foreach ($tokens as $tid =&gt; $token) {\r\n\t    \r\n\t\tif ($token[0] == T_FUNCTION) {\r\n\t\t  \r\n\t\t  $comment = &quot;&quot;;\r\n\t\t  if ($tokens[$tid-2][0] == T_COMMENT || $tokens[$tid-1][0] == T_COMMENT  ) {\r\n\t\t    $comment = &quot;*&quot;;\r\n  \t      }\r\n\t\t  \t\t  \r\n\t\t  $i = $tid+1;\r\n\t\t  while ($tokens [$i][0] != T_STRING ) {\r\n\t\t    $i++;  \r\n\t\t  }\r\n\t\t  \r\n\t\t  $functions[] = $comment.$tokens [$i][1].&quot;_|_&quot;.($tokens[$i][2]-1);\r\n\t\t \r\n\t\t}\r\n\t\t \r\n\t\tif ($token[0] == T_COMMENT) {\r\n\t\t \r\n\t\t  $comments[] = htmlentities ($token [1]);\r\n\t\t  $lookups[$token[2]] = $token[1];\r\n\t\t} \r\n\t\t   \r\n\t\tif ($token[0] == T_COMMENT) {\r\n\t\t \t \r\n\t\t  if (stripos ($token[1], &quot;todo:&quot;) !== false) {\r\n\t\t    $todos[] = $token [1].&quot;_|_&quot;.($token[2]-1) ;\r\n\t\t  }\r\n\t  \r\n\t\t}\r\n\t\t\r\n\t\tif ($token[0] == T_COMMENT) {\r\n\t\t \t \r\n\t\t  if (stripos ($token[1], &quot;#:&quot;) !== false) {\r\n\t\t    $releasenotes[] =  $token [1];\r\n\t\t  }\r\n\t  \r\n\t\t}\r\n\t\t\r\n\t     if ($token[0] == T_CLASS) {\r\n\t\t  \r\n\t\t  $comment = &quot;&quot;;\r\n\t\t  if ($tokens[$tid-2][0] == T_COMMENT || $tokens[$tid-1][0] == T_COMMENT  ) {\r\n\t\t    $comment = &quot;*&quot;;\r\n  \t      }\r\n\t\t  \r\n\t\t  $i = $tid+1;\r\n\t\t  \t  \r\n\t\t  while ($tokens [$i][0] != T_STRING ) {\r\n\t\t    $i++;  \r\n\t\t  }\r\n\t\t  $classes[] = $comment.$tokens [$i][1].&quot;_|_&quot;.($tokens[$i][2]-1);\r\n\t\t  \r\n\t\t} \r\n\t\t\r\n\t\t$lines = $token[2];\r\n\t\t\r\n\t  }\r\n\t  \t  \r\n\t  return array ( &quot;classes&quot; =&gt; $classes, &quot;functions&quot; =&gt; $functions, &quot;comments&quot; =&gt; $comments, &quot;todos&quot; =&gt; $todos, &quot;lookups&quot; =&gt; $lookups, &quot;lines&quot; =&gt; $lines, &quot;releasenotes&quot; =&gt; $releasenotes ) ;\r\n\t}\r\n\t\r\n   \/\/Function to draw a picture of the code \r\n   function draw_script_picture ( $elements ) {\r\n     \r\n\t \r\n\t foreach ($elements[&quot;classes&quot;] as $fid =&gt; $class) {\r\n\t   \r\n\t   $class = explode (&quot;_|_&quot;, $class);\r\n\t \r\n\t   $color = &quot;red&quot;;\r\n\t   if (strpos ($class[0], &quot;*&quot;) !== false) {\r\n\t     $color = &quot;green&quot;;\r\n\t   }\r\n\t   $class[0] = str_replace (&quot;*&quot;, &quot;&quot;, $class[0]);\r\n\t   $classes[] = div (array (&quot;class&quot; =&gt; &quot;smallblock&quot;, &quot;style&quot; =&gt; &quot;background: {$color}&quot;), a ( array (&quot;title&quot; =&gt; &quot;{$class[0]}&quot;, &quot;href&quot; =&gt; &quot;#class&quot;.$fid ),  &quot;K&quot;));\r\n\t }\r\n\t \r\n\t \r\n\t foreach ($elements[&quot;functions&quot;] as $fid =&gt; $func) {\r\n\t   \r\n\t   $func = explode (&quot;_|_&quot;, $func);\r\n\t \r\n\t   $color = &quot;red&quot;;\r\n\t   if (strpos ($func[0], &quot;*&quot;) !== false) {\r\n\t     $color = &quot;green&quot;;\r\n\t   }\r\n\t   $func[0] = str_replace (&quot;*&quot;, &quot;&quot;, $func[0]);\r\n\t   $functions[] = div (array (&quot;class&quot; =&gt; &quot;smallblock&quot;, &quot;style&quot; =&gt; &quot;background: {$color}&quot;), a ( array (&quot;title&quot; =&gt; &quot;{$func[0]}&quot;, &quot;href&quot; =&gt; &quot;#function&quot;.$fid ),  &quot;F&quot; ));\r\n\t }\r\n\t \r\n\t foreach ($elements[&quot;todos&quot;] as $fid =&gt; $todo) {\r\n\t   \r\n\t   $todo = explode (&quot;_|_&quot;, $todo);\r\n\t \r\n\t   $color = &quot;lightblue&quot;;\r\n\t   \r\n\t   $todos[] = div (array (&quot;class&quot; =&gt; &quot;smallblock&quot;, &quot;style&quot; =&gt; &quot;background: {$color}&quot;), a ( array (&quot;title&quot; =&gt; &quot;{$todo[0]}&quot;, &quot;href&quot; =&gt; &quot;#todo&quot;.$fid ), &quot;T&quot; ));\r\n\t }\r\n\t \r\n\t foreach ($elements[&quot;comments&quot;] as $fid =&gt; $comment) {\r\n\t   \r\n\t   \r\n\t \r\n\t   $color = &quot;lightblue&quot;;\r\n\t   \r\n\t   $comments[] = div (array (&quot;class&quot; =&gt; &quot;smallblock&quot;, &quot;style&quot; =&gt; &quot;background: {$color}&quot;), a ( array (&quot;title&quot; =&gt; &quot;{$comment}&quot;, &quot;href&quot; =&gt; &quot;javascript:void(0);&quot; ), &quot;C&quot; ));\r\n\t }\r\n\t \r\n\t \r\n\t \r\n\t \r\n\t \r\n\t $params = array (&quot;class&quot; =&gt; &quot;scriptholder&quot;);\r\n\t $html .= div ( array ( &quot;style&quot; =&gt; &quot;width: 270px; background: orange; &quot;), div ($params, $classes ), div ($params, $functions ), div ( $params, $comments), div ($params, $todos) );\r\n     \r\n     return $html;\r\n   }\r\n\t\r\n\t\r\n   \/* This is a draw function  a multiline comment   *\/\r\n   function draw () {\r\n     $html = &quot;&quot;;\r\n\t $html .= scss ( &quot;  \r\n\t \t    \r\n\t     .block {\r\n\t\t   display: inline-block;\r\n\t\t   border: 1px solid orange;\r\n\t\t   width: 44px;\r\n           height: 44px;\t\t   \r\n\t\t   font-size: 10px;\r\n\t\t   text-align: center;\r\n\t\t }\r\n\t\t \r\n\t\t .segment {\r\n\t\t   display: inline-block;\r\n\t\t   border: 1px solid black;\r\n\t\t   width: 20px;\r\n           height: 20px;\t\t   \r\n\t\t }\r\n\t\t \r\n\t\t .smallblock {\r\n\t\t   display: block;\r\n\t\t   float: left;\r\n\t\t   border: 1px solid black;\r\n\t\t   width: 16px;\r\n\t\t   height: 18px;\r\n\t\t   margin: 1px;\r\n\t\t }\r\n\t\t \r\n\t\t .scriptholder {\r\n\t\t   display: inline-block;\r\n\t\t   border : 2px solid green;\r\n\t\t   width: 132px;\r\n\t\t   text-align: center;\r\n\t\t   min-height: 64px;\r\n\t\t   padding: 2px;\r\n\t\t   margin-right: 2px;\r\n\t\t   \r\n\t\t }\r\n\t\t \r\n\t &quot; );\r\n\t \t \r\n\t if ($_REQUEST[&quot;content&quot;] == &quot;scriptoverview&quot;) {\r\n\t   $script = $this-&gt;CDE-&gt;get_value (0, &quot;select s.*, (select interfaceid from tblinterface where name = s.interface ) as interfaceid from tblscript s where scriptid = {$_REQUEST[&quot;scriptid&quot;]} &quot;);\r\n\t   \r\n\t   \r\n\t   if ($script-&gt;INTERFACEID == &quot;&quot;) {\r\n\t     $script-&gt;INTERFACEID = &quot;9999999&quot;;\r\n\t   }\r\n\t   \r\n\t   $link = &quot;http:\/\/{$_SERVER[&quot;HTTP_HOST&quot;]}\/?release={$_REQUEST[&quot;release&quot;]}&amp;interface=Developer&amp;interfaceid=$script-&gt;INTERFACEID&amp;scriptid={$script-&gt;SCRIPTID}&amp;content=openscript&quot;;\r\n\t   \r\n\t   $deletebutton = &quot;&quot;;\r\n\t   if (strpos ($script-&gt;SCRIPTNAME, &quot;New&quot;) !== false ) {\r\n\t     $dellink = &quot;http:\/\/{$_SERVER[&quot;HTTP_HOST&quot;]}\/release\/{$_REQUEST[&quot;release&quot;]}\/interface\/Developer\/interfaceid\/$script-&gt;INTERFACEID\/scriptid\/{$script-&gt;SCRIPTID}\/deletescript\/&quot;;\r\n\t     $deletebutton = input (array (&quot;type&quot; =&gt; &quot;button&quot;, &quot;onclick&quot; =&gt; &quot; location.href = ''$dellink''; &quot;), &quot;X&quot;);\r\n\t   }\r\n\t   \r\n\t   $html .= h1 ( a ( array (&quot;onclick&quot; =&gt; &quot;window.open (''$link''); &quot;),  $script-&gt;SCRIPTNAME ), $deletebutton );\r\n\t   \r\n\t   \r\n\t   \r\n\t   $elements = $this-&gt;get_php_code_elements ( $script-&gt;CONTENT );\r\n\t   $classes = $elements[&quot;classes&quot;];\r\n\t   $functions = $elements[&quot;functions&quot;];\r\n\t   $comments = $elements[&quot;comments&quot;];\t\t \r\n\t   $todos = $elements[&quot;todos&quot;];\t\r\n\t   $lookups = $elements[&quot;lookups&quot;];\r\n\t   $allnotes = $elements[&quot;releasenotes&quot;];\r\n\t    \r\n\t    \r\n\t   \r\n\t   \/\/draw the element pictures\r\n\t   $html .= $this-&gt;draw_script_picture ($elements);\r\n\t   \r\n\t   foreach ( $functions as $fid =&gt; $func ) {\r\n\t       \r\n\t\t  $func = explode (&quot;_|_&quot;, $func);\r\n\t\t  \r\n\t\t  $color = &quot;red&quot;;\r\n\t\t  if (strpos ($func[0], &quot;*&quot;) !== false) {\r\n\t\t    $color = &quot;black&quot;;\r\n\t\t  }\r\n\t\t  \r\n\t\t  $comment = span ( array (&quot;style&quot; =&gt; &quot;color: purple&quot;), $lookups[$func[1]] );\t\t  \r\n\t\t  $func = str_replace (&quot;*&quot;, &quot;&quot;, $func[0].&quot; (line &quot;.$func[1].&quot;)&quot;);\r\n\t       \r\n\t      $allfunctions[] = li ( array (&quot;style&quot; =&gt; &quot;color : {$color};&quot;, &quot;id&quot; =&gt; &quot;function&quot;.$fid), $comment.br().$func );\t\t  \t\t  \r\n\t   }\r\n\t   \r\n\t   if (count ($functions) &gt; 0) {\r\n\t       $html .= h2 (&quot;List of functions&quot;);\r\n\t       $html .= ul ( $allfunctions );\r\n\t   }\r\n\t   \r\n\t   if (count ($classes) &gt; 0) {\r\n\t\t   $html .= h2 (&quot;List of Classes&quot;); \r\n\r\n\t\t   foreach ($classes as $cid =&gt; $class) {\r\n\t\t\t $class = explode (&quot;_|_&quot;, $class);\r\n\t\t\t $class = str_replace (&quot;*&quot;, &quot;&quot;, $class[0]);\r\n\r\n\t\t\t $classinfo = $this-&gt;get_class_info ( $class );\t\r\n\t\t\t $html .= h2 (array (&quot;id&quot; =&gt; &quot;class&quot;.$cid),  $class);\r\n\t\t\t $html .= ul ($classinfo);\r\n\t\t   }\r\n\t   }\r\n\t   \r\n\t   \t   \r\n\t   if (count ($todos) &gt; 0) {\r\n\t   \t  $html .= h2 (&quot;List of Todos&quot;);\r\n\t\t  \r\n\t\t  foreach ($todos as $tid =&gt; $todo) {\r\n\t\t    $todo = explode (&quot;_|_&quot;, $todo);\r\n\t\t\t\r\n\t\t    $alltodos = li ( array (&quot;id&quot; =&gt; &quot;todo&quot;.$tid),  $todo[0]. &quot; (line &quot;.$todo[1].&quot;)&quot; );\t\t  \r\n\t\t  }\r\n\t\t  \r\n\t\t  $html .= ul ( $alltodos );\r\n\t\t  \r\n\t   }\t   \r\n\t   \r\n\t \r\n\t }\r\n\t   else {\r\n\t \r\n\t     $scripts = $this-&gt;CDE-&gt;get_row (&quot;select scriptid, scriptname, purpose, content, (select interfaceid from tblinterface where name = s.interface ) as interfaceid, scripttype, status from tblscript s where release = ''{$this-&gt;request[&quot;release&quot;]}'' order by scripttype, status&quot;);\r\n\t  \r\n\t     $icount = 0;\r\n\t     $scripttype = &quot;&quot;;\r\n\t\t \r\n\t\t \r\n\t \r\n\t     $allclasses = array ();\r\n\t\t $allnotes = array ();\r\n\t     $lines = 0;\r\n\t     foreach ( $scripts as $sid =&gt; $script ) {\r\n\t\t\t if ($script-&gt;SCRIPTTYPE != $scripttype) {\r\n\t\t\t   $scripttype = $script-&gt;SCRIPTTYPE;\r\n\t\t\t }\r\n\t\t\t \r\n\t\t\t \r\n             if ($script-&gt;CONTENT == &quot;&quot;) {\r\n\t\t\t   $sqldelete = &quot;delete from tblscript where scriptid = {$script-&gt;SCRIPTID}&quot;;\r\n\t\t\t   echo &quot;deleteing script &quot;.$script-&gt;SCRIPTNAME;\r\n\t\t\t   $this-&gt;CDE-&gt;exec ($sqldelete);\r\n\t\t\t }\r\n\t\t\t \r\n\t\t\t \r\n\r\n\t\t\t $elements = $this-&gt;get_php_code_elements ( $script-&gt;CONTENT );\r\n\t\t\t $classes = $elements[&quot;classes&quot;];\r\n\t\t\t $functions = $elements[&quot;functions&quot;];\r\n\t\t\t $comments = $elements[&quot;comments&quot;];\t\t \r\n\t\t\t $todos = $elements[&quot;todos&quot;];\r\n\t\t\t $releasenotes = $elements[&quot;releasenotes&quot;];\r\n\t\t\t $lines += $elements[&quot;lines&quot;];\r\n\t\t\t \r\n\t\t\t \r\n\t\t\t $allnotes = array_merge ($allnotes, $releasenotes);\r\n\t\t\t \r\n\t\t     \r\n\t\t\t\r\n\r\n\t\t\t $link = &quot;http:\/\/{$_SERVER[&quot;HTTP_HOST&quot;]}\/?release={$_REQUEST[&quot;release&quot;]}&amp;interface=Developer&amp;scriptid={$script-&gt;SCRIPTID}&amp;content=scriptoverview&quot;;\r\n\r\n\t\t\t $params = array ( &quot;class&quot; =&gt; &quot;segment&quot; );\r\n             \r\n\t\t\t \/\/$littleblocks = &quot;&lt;div class=\\&quot;segment\\&quot; &gt; &quot;.count ( $classes ).&quot; &lt;\/div&gt;&quot;; \r\n\r\n\t\t\t $littleblocks = div ( $params, count ( $classes ) ). div ( $params, count( $functions) ). div ( $params, count ( $comments) ). div ( $params, count ($todos) );\r\n\r\n\t\t\t $shell = div (array (&quot;class&quot; =&gt; &quot;block&quot;, &quot;style&quot; =&gt; &quot;background: green&quot;,  &quot;onclick&quot; =&gt; &quot; window.open (''$link''); &quot;,  &quot;title&quot; =&gt; $script-&gt;SCRIPTNAME  ) , $littleblocks  );\r\n\r\n\t\t\t \/\/if we have a todo we must always show it as blue to make a reminder\r\n\t\t\t if (count ($todos) &gt; 0 ) {\r\n\t\t\t   $shell-&gt;set_attribute (&quot;style&quot;, &quot;background: lightblue&quot;);\t\t \r\n\t\t\t }\r\n\t\t\t  else {\r\n\r\n\t\t\t  if (count ($comments) == 0) {\r\n\t\t\t   $shell-&gt;set_attribute (&quot;style&quot;, &quot;background: red&quot;);\t\t   \t\t  \r\n\t\t\t  }\r\n\r\n\t\t\t  if (count ($comments) &gt; 0) {\r\n\t\t\t   $shell-&gt;set_attribute (&quot;style&quot;, &quot;background: yellow&quot;);\t\t   \t\t  \r\n\t\t\t  }\r\n                 \r\n\t\t\t  $icommented = 0;\r\n\t\t\t  $ifunctions = 0;\r\n\t\t\t  foreach ($functions as $fid =&gt; $func) {\r\n\t\t\t\tif (strpos ($func, &quot;*&quot;) !== false) {\r\n                  $icommented++;\r\n\t\t\t\t}\r\n\t\t\t\t$ifunctions++;\r\n\t\t\t  }\r\n\t\t\t  \r\n\t\t\t  $iclasscommented = 0;\r\n\t\t\t  $iclasses = 0;\r\n\t\t\t  foreach ($classes as $cid =&gt; $class) {\r\n\t\t\t\tif (strpos ($class, &quot;*&quot;) !== false) {\r\n                  $iclasscommented++;\r\n\t\t\t\t}\r\n\t\t\t\t$iclasses++;\r\n\t\t\t  }\r\n\t\t\t  \r\n\t\t\t\t\t  \t\t  \r\n\t\t\t  if ($icommented == $ifunctions &amp;&amp; count ($comments) &gt;= $ifunctions &amp;&amp; $iclasscommented == $iclasses ) {\r\n\t\t\t    $shell-&gt;set_attribute (&quot;style&quot;, &quot;background: green&quot;);\t\t   \t\t  \r\n\t\t\t  }\r\n\r\n\r\n\t\t\t } \r\n\t\t\r\n\t\t\t $html .= $shell;\r\n\t\t\t $icount++;\r\n\t\t }\r\n\r\n\r\n\t\t $html .= h3 (&quot; {$icount} scripts in the system (&quot;.number_format ( $lines, 0, &quot;.&quot;, &quot;,&quot;).&quot; lines of code) &quot;) ;\r\n\t\t \r\n\t\t   \r\n\t\t\r\n\t }\r\n\t \r\n\t \r\n\t $params = array ( &quot;class&quot; =&gt; &quot;segment&quot; );\r\n\t $littleblocks = div ( $params, &quot;K&quot; ). div ( $params, &quot;F&quot; ). div ( $params, &quot;C&quot; ). div ( $params, &quot;T&quot; );\r\n\t $shell = div (array (&quot;class&quot; =&gt; &quot;block&quot;, &quot;style&quot; =&gt; &quot;background: white&quot;,  &quot;title&quot; =&gt; &quot;Mapping&quot;  ) , $littleblocks  );\r\n\t $html .= $shell;\r\n\t $html .= ul (\r\n\t     li (&quot;K =&gt; Classes&quot;),\r\n\t\t   li (&quot;F =&gt; Functions&quot;),\r\n\t\t   li (&quot;C =&gt; Comments&quot;),\r\n\t\t   li (&quot;T =&gt; Todo Comments&quot;)\r\n\t  );\r\n\t  \r\n\t $html .= h1 (&quot;Release Notes&quot;);\r\n\t \r\n\t $notes = array ();\r\n\t foreach ($allnotes as $rid =&gt; $releasenote) {\r\n\t    $notes[] =  li ( $releasenote ); \r\n\t }\r\n\t  \r\n\t $html .= ul ( $notes );\r\n\t \r\n     return $html;\r\n   }\r\n \r\n \r\n}"},{"recid":10,"SCRIPTID":"12","SCRIPTNAME":"TUpdateMe","CONTENT":"\/\/Andre: The updater class for the development environment\nclass TUpdateMe {\n  public $CDE;\n  public $request;\n  public $cdedev;\n  \n  \/\/Andre: the constructor for the UpdateMe script\n  function __construct ($CDE, $request, $cdedev) {\n    $this-&gt;CDE = $CDE; \/\/developer scripts\n\t$this-&gt;request = $request;\n\t$this-&gt;cdedev = $cdedev;\n  }\n  \n  \n  function __toString () {\n    return $this-&gt;draw();\n  }\n  \n  function draw () {\n    $html = &quot;&quot;; \n    $html .= h3 (&quot;Getting updates from server....&quot;);\n\t\n\t\/\/Fetch the crossdatabase engine and shape\n\t$fetchfiles = file_get_contents (&quot;http:\/\/tina4.com\/master\/?interface=Update&amp;action=GetFiles&quot;);\n\t\n\t$fetchfiles = json_decode ($fetchfiles);\n\t\n\t\n\t\n\t$li = array ();\n\t\n\tforeach ($fetchfiles as $fid =&gt; $fetchfile) {\n\t  \n\t  $li[] = li ( &quot;Fetched &quot;.b ($fetchfile-&gt;filename). &quot; ... &quot;  );\n\t  \n\t  file_put_contents ( $fetchfile-&gt;filename, urldecode ($fetchfile-&gt;content) );\n\t\n\t}\n\t\n\t\n\t$li[] = li ( pre ( file_get_contents (&quot;readme.txt&quot;) ) );\n\t\n\n    \/\/Get the update script first ----\n\t\n\t$fetchupdates = file_get_contents (&quot;http:\/\/tina4.com\/master\/?interface=Update&amp;action=GetUpdates&quot;);\n\t\n\t$fetchupdates = json_decode ($fetchupdates);\n\t\n\t\n\t\n\t\n\tforeach ($fetchupdates as $fid =&gt; $fetchupdate) {\n\t  \n\t  $script = $this-&gt;CDE-&gt;get_value (0, &quot;select scriptid, scriptname, version, scriptcategory \n\t     from tblscript where scriptid = {$fetchupdate-&gt;scriptid} and release = ''{$this-&gt;request[&quot;release&quot;]}'' &quot;);\n\t  \n\t  \/\/print_r ( htmlentities ( urldecode ($fetchupdate-&gt;content) ) );\n\t  \n\t  if ( $script-&gt;SCRIPTNAME != $fetchupdate-&gt;scriptname ) {\n\t    \/\/legacy - see if we can find some scripts which exist by the same name\n\t\t\n\t\t\n\t\t\n\t\t$script = $this-&gt;CDE-&gt;get_value (0, &quot;select \n\t\t                                       scriptid, scriptname, version, scriptcategory\n\t                                          from tblscript \n\t\t\t\t\t\t\t\t\t\t\t where scriptname = ''{$fetchupdate-&gt;scriptname}''\n\t\t\t\t\t\t\t\t\t\t\t   and release = ''{$this-&gt;request[&quot;release&quot;]}'' &quot;);\n\t    \n\t\t\/\/we have found a script\n\t\tif ($script-&gt;SCRIPTID != &quot;&quot; &amp;&amp; $script-&gt;VERSION &lt; $fetchupdate-&gt;version) {\n\t\t  \/\/$cdedev = new cde_cdedev ($CDE, $_REQUEST, $outputpath=&quot;includes&quot;);\n\t\t    $li[] = li ( b ( $script-&gt;SCRIPTNAME. &quot; (&quot;. $script-&gt;VERSION.&quot;)&quot; ). &quot; ... found and updated to {$fetchupdate-&gt;version} &quot; );\n\t\t\t\n\t\t  $sqlupdate = &quot;update tblscript set scriptname = ''{$fetchupdate-&gt;scriptname}'', scriptcategory = ''{$fetchupdate-&gt;scriptcategory}'', content = ?, version = ''{$fetchupdate-&gt;version}'' where scriptid = {$script-&gt;SCRIPTID}&quot;;\n\t\t    $this-&gt;CDE-&gt;exec ($sqlupdate, urldecode ($fetchupdate-&gt;content) );\n\t\t}\n\t\t  else {\n\t\t  \/\/we must add this script into the current release\n\t\t  if ($script-&gt;SCRIPTID == &quot;&quot;) {\n\t\t  \n\t\t  \n \t        $li[] = li ( b ( $script-&gt;SCRIPTNAME. &quot; (&quot;. $script-&gt;VERSION.&quot;)&quot; ). &quot; ... added to the system &quot; );\n\t\t  \n\t\t  }\n\t\t\n\t\t}\n\t\t\/\/make sure we don''t have any scripts of this version to release\n\t\t\n\t\t\n\t  }\n\t    else\n\t  if ($script-&gt;VERSION &lt; $fetchupdate-&gt;version) {\n\t    $li[] = li ( b ( $script-&gt;SCRIPTNAME. &quot; (&quot;. $script-&gt;VERSION.&quot;)&quot; ). &quot; ... updated to &quot;.$fetchupdate-&gt;version );\n\t\t\n\t    $sqlupdate = &quot;update tblscript set scriptname = ''{$fetchupdate-&gt;scriptname}'', scriptcategory = ?, content = ?, version = ? where scriptid = {$script-&gt;SCRIPTID}&quot;;\n\t\t$this-&gt;CDE-&gt;exec ($sqlupdate, $fetchupdate-&gt;scriptcategory, urldecode ($fetchupdate-&gt;content), $fetchupdate-&gt;version );\n\t\t\n\t  }\n\t}\n\t\n\t\n\tif (count ($li) &gt; 0) {\n\t  $html .= ul ($li );\n\t}\n\t  else {\n\t  $html .= h3 ( &quot;No new updates, check back later&quot; ); \n\t  \n\t}\n\t\n\treturn $html;\n  \n  }\n  \n  \n}  "},{"recid":11,"SCRIPTID":"1000","SCRIPTNAME":"Placeholder Script","CONTENT":"\/\/Andre: Remove this script at your own peril"},{"recid":12,"SCRIPTID":"1001","SCRIPTNAME":"ajaxExample","CONTENT":""},{"recid":13,"SCRIPTID":"16","SCRIPTNAME":"TINA4Grid","CONTENT":"\/\/A crud handling grid based on an sql query works with an AJAX handler to get the data.\n\/\/It will need the normal headers to make things work properly\nclass TINA4GRID {\n  private $CDE;\n  private $request;\n  private $title;\n  private $tablename;\n  private $columns;\n  private $primarycolumn;\n  private $permissions;\n  private $instancename;\n  private $rows;\n  private $showsearch;\n  private $showfooter;\n \n  \n  \/\/constructor function to setup the grid\n  function __construct ($CDE, \n                        $request, \n\t\t\t\t\t\t$title,\n\t\t\t\t\t\t$tablename, \n\t\t\t\t\t\t$columns, \n\t\t\t\t\t\t$primarycolumn, \n\t\t\t\t\t\t$permissions=&quot;111111&quot;,\n\t\t\t\t\t\t$instancename=&quot;grid&quot;, \n\t\t\t\t\t\t$rows=20, \n\t\t\t\t\t\t$showsearch=true, \n\t\t\t\t\t\t$showfooter=true,\n\t\t\t\t\t\t$showcheckbox=true\n\t\t\t\t\t\t) {\n    $this-&gt;CDE = $CDE;\n\t$this-&gt;request = $request;\n\t$this-&gt;title = $title;\n\t$this-&gt;tablename = $tablename;\n\t$this-&gt;columns = $columns;\n\t$this-&gt;primarycolumn = $primarycolumn;\n\t$this-&gt;permissions = $permissions;\n\t$this-&gt;instancename = $instancename;\n\t$this-&gt;rows = $rows;\n\t$this-&gt;showsearch = $showsearch;\n\t$this-&gt;showfooter = $showfooter;\n\t$this-&gt;showcheckbox = $showcheckbox;\n  }\n\n  \n  function __toString () {\n    return $this-&gt;draw();\n  }\n  \n  \n  function form () {\n  \n  }\n  \n  \n  function title () {\n    return tr ( th ( array (&quot;class&quot; =&gt; &quot;gridtitle&quot;, &quot;colspan&quot; =&gt; count ( $this-&gt;columns ) ),  $this-&gt;title ) ); \n  }\n  \n  function search () {\n  \n    return tr ( td ( array (&quot;class&quot; =&gt; &quot;search&quot;, &quot;colspan&quot; =&gt; count ( $this-&gt;columns ) ),  &quot;Search&quot; ) );\n  }\n  \n  function buttons () {\n    return tr ( td ( array (&quot;class&quot; =&gt; &quot;buttons&quot;, &quot;colspan&quot; =&gt; count ( $this-&gt;columns ) ), &quot;Buttons&quot; ) );\n  }\n  \n  \n  \/\/Return the search information as well as the column headers\n  function header () {\n    \n\t\n\tif ( $this-&gt;showsearch) {\n\t  $search = $this-&gt;search();\n\t}\n\t\n\t$title = $this-&gt;title();\n\t\n\t$buttons = $this-&gt;buttons();\n\t\n\t\/\/make the header\n\t$ths = array();\n\t\/\/show check box \n\tif ( $this-&gt;showcheckbox ) {\n\t  $ths[] = td ( input ( array (&quot;type&quot; =&gt; &quot;checkbox&quot;, &quot;name&quot; =&gt; &quot;selall&quot;.$_REQUEST[&quot;instancename&quot;]), 1 )  );\n\t}\n\t\n\tforeach ( $this-&gt;columns as $cid =&gt; $column ) {\n\t  $ths[] = th ( array ( &quot;style&quot; =&gt; &quot;text-align: {$column[&quot;align&quot;]}&quot; ), $column[&quot;alias&quot;] );\n\t}\n\n    $html = shape ( $title, $search, $buttons, tr ( $ths ) );\t\n    return $html;\n  }\n  \n  \/\/Return the totals on the bottom as well as the navigation for the grid\n  function footer () {\n  \n    $buttons = $this-&gt;buttons ();\n\t\/\/footerheaders\n\t$tfs = array();\n\tif ( $this-&gt;showfooter ) {\n\t  \n\t}\n\t$html = shape ( $buttons, tr ( $tfs ) );\n    \n\treturn $html;\n  }\n  \n  function grid_switch () {\n  \n  }\n  \n  function draw () {\n    \n\t$html = &quot;&quot;;\n\t\n\t\/\/make the grid layout\n\t$html .= table ( array (&quot;class&quot; =&gt; &quot;tina4grid&quot;), thead ( $this-&gt;header () ) , tbody (array ( &quot;id&quot; =&gt; &quot;data{$this-&gt;instancename}&quot;) ), tfoot ( $this-&gt;footer () ) );\n\t$html .= script ( &quot;call_cdeajax ( ''TINA4AJAX'', ''data{$this-&gt;instancename}'', false, { instancename: ''{$this-&gt;instancename}'', columns: ''&quot;.json_encode ($this-&gt;columns).&quot;'', passwordhash: ''&quot;.crypt($_SESSION[&quot;TINA4GRIDPASSWORD&quot;]).&quot;'', tablename: ''{$this-&gt;tablename}'', primarycolumn: ''{$this-&gt;primarycolumn}'', showcheckbox : {$this-&gt;showcheckbox} } ); &quot;);\n\t\n\treturn $html;\n  }\n\n}"},{"recid":14,"SCRIPTID":"17","SCRIPTNAME":"TINA4AJAX","CONTENT":"$html = &quot;&quot;;\n\/\/Andre: This functionality below serves as a way to prevent anyone from taking data from your server via an AJAX call\n$password = &quot;tina4&quot; ;\n\nif ( crypt ( $password, $_REQUEST[&quot;passwordhash&quot;]) == $_REQUEST[&quot;passwordhash&quot;] ) {\n  \/\/Andre: We can make things happen here\n  $columns = json_decode ( $_REQUEST[&quot;columns&quot;] );\n  \n  foreach ($columns as $cid =&gt; $column ) {\n    $fields[] = $column-&gt;name;\n  }\n  \n  $fields = implode ( &quot;,&quot;, $fields );\n  \n  $sql = &quot;select {$fields}, {$_REQUEST[&quot;primarycolumn&quot;]} as PK from {$_REQUEST[&quot;tablename&quot;]} t &quot;;\n  $records = $CDE-&gt;get_row ( $sql );\n  \n  \n  \/\/get the rows for the table\n  $trs = array ();\n  foreach ($records as $rid =&gt; $record ) {\n    \/\/pass back the records on the system\n\t$tds = array();\n\t\n\tif ( $_REQUEST[&quot;showcheckbox&quot;] ) {\n\t  $tds[] = td ( input ( array (&quot;type&quot; =&gt; &quot;checkbox&quot;, &quot;name&quot; =&gt; &quot;sel&quot;.$_REQUEST[&quot;instancename&quot;].&quot;[]&quot;), $record-&gt;PK )  );\n\t}\n\tforeach ($columns as $cid =&gt; $column ) {\n\t  $column-&gt;name = strtoupper ( $column-&gt;name );\n\t  eval ('' $tds[] =  td ( array ( &quot;style&quot; =&gt; &quot;text-align: ''.$column-&gt;align.''&quot;), $record-&gt;''.$column-&gt;name.''  ); '');\n\t}\n\t\n\t\/\/add the new row\n\t$trs[] = tr ( array ( &quot;onmouseover&quot; =&gt; &quot;if (this.className != ''rowselected'' ) { this.className = ''rowhover''; }&quot;, &quot;onmouseout&quot; =&gt; &quot;if (this.className == ''rowhover'') { this.className = ''''; } &quot; ), $tds );\n  }\n  \n  $html .= shape ( $trs );  \n\n}\n else {\n  $html = b ( &quot;Error reading the data&quot; );\n}\n\necho $html;\n"},{"recid":15,"SCRIPTID":"1004","SCRIPTNAME":"Example","CONTENT":"\/\/Andre: This example will use the SQLite3 database called application.db which is found in the web root\n\n\/\/Andre: The headers here allow for things to automate your html headers with the includes needed\n$html .= $this-&gt;html_header (&quot;Example of CRUD management&quot;, &quot;Examplecss&quot;);\n$html .= $this-&gt;html_ajaxhandler();\n\n\n\/\/Andre: We need to create a simple table first with some examples of data we will be using, most important is to have an example of an integer, numeric, data and text\n\n$sqlcreate = &quot;create table if not exists tbluser (\n  userid integer primary key autoincrement,\n  firstname varchar (200) default '''',\n  lastname varchar (200) default '''',\n  noofprojects integer default 0,\n  rateperhour numeric (18,2) default 20.00,\n  dateofbirth date, \n  datecreated datetime \n)&quot;;\n\n\/\/Andre: Use CDE to create the table\n$CDE-&gt;exec ( $sqlcreate );\n\n\/\/Andre: See if we get any errors\n$html .= $CDE-&gt;get_lasterror();\n\n$lastnames = array ( &quot;Smith&quot;, &quot;Hill&quot;, &quot;Black&quot;, &quot;White&quot;, &quot;Green&quot;, &quot;Underhill&quot; );\n$firstnames = array ( &quot;Andre&quot;, &quot;Zoe&quot;, &quot;Julian&quot;, &quot;Valiant&quot;, &quot;Berty&quot;, &quot;Cliff&quot; );\n\n$sqlinsert = &quot;insert into tbluser (firstname, lastname, noofprojects, rateperhour) \n                           values (        ?,        ?,            ?,           ?)&quot;;\n\n$CDE-&gt;exec ( $sqlinsert, $firstnames[rand(0, count($firstnames)-1)], $lastnames[rand(0, count($lastnames)-1)], rand (0, 10), rand (20, 40) );\n\n\/\/Andre: Set the session grid password to make sure the data returned by the grid is uniform - only needs to be done once\n\/\/Make sure it mataches the passwordhash setting in the TINA4AJAX script - if you don''t need security don''t worry\n$_SESSION[&quot;TINA4GRIDPASSWORD&quot;] = &quot;tina4&quot;;\n\n$sqldelete = &quot;delete from tbluser&quot;;\n\n\/\/$CDE-&gt;exec ( $sqldelete );\n\n\/\/Andre: Initialize the CRUD manager for the above table\n\n$columns[] = array ( &quot;name&quot; =&gt; &quot;userid&quot;, &quot;alias&quot; =&gt; &quot;ID&quot;, &quot;align&quot; =&gt; &quot;left&quot; );\n$columns[] = array ( &quot;name&quot; =&gt; &quot;firstname&quot;, &quot;alias&quot; =&gt; &quot;First Name&quot;, &quot;align&quot; =&gt; &quot;left&quot; );\n$columns[] = array ( &quot;name&quot; =&gt; &quot;lastname&quot;, &quot;alias&quot; =&gt; &quot;Last Name&quot;, &quot;align&quot; =&gt; &quot;left&quot; );\n$columns[] = array ( &quot;name&quot; =&gt; &quot;noofprojects&quot;, &quot;alias&quot; =&gt; &quot;No of Projects&quot;, &quot;align&quot; =&gt; &quot;right&quot; );\n$columns[] = array ( &quot;name&quot; =&gt; &quot;rateperhour&quot;, &quot;alias&quot; =&gt; &quot;Rate per Hour&quot;, &quot;align&quot; =&gt; &quot;right&quot; );\n$columns[] = array ( &quot;name&quot; =&gt; &quot;dateofbirth&quot;, &quot;alias&quot; =&gt; &quot;Date of Birth&quot;, &quot;align&quot; =&gt; &quot;left&quot; );\n$columns[] = array ( &quot;name&quot; =&gt; &quot;datecreated&quot;, &quot;alias&quot; =&gt; &quot;Date Created&quot;, &quot;align&quot; =&gt; &quot;left&quot; );\n\n\n$html .= new TINA4Grid ($CDE, \n                        $_REQUEST, \/\/post variables\n\t\t\t\t\t\t$title=&quot;My Grid&quot;,\n\t\t\t\t\t\t$tablename=&quot;tbluser&quot;, \n\t\t\t\t\t\t$columns, \n\t\t\t\t\t\t$primarycolumn=&quot;userid&quot;, \n\t\t\t\t\t\t$permissions=&quot;11111&quot;, \/\/insert, update, view, delete, print\n\t\t\t\t\t\t$instancename=&quot;grid&quot;, \n\t\t\t\t\t\t$rows=20, \n\t\t\t\t\t\t$showsearch=true, \n\t\t\t\t\t\t$showfooter=true   \n\n         );\n\t\t \n\/\/Andre: This footer is for debugging, the first parameter displays session and request information, the second is to refresh SASS without reloading the screen.\n$html .= $this-&gt;html_footer(true, false);\t\t "},{"recid":16,"SCRIPTID":"1005","SCRIPTNAME":"Examplecss","CONTENT":"table .tina4grid {\n .rowselected {\n   background: yellow;\n }\n \n .rowhover {\n   background: red;\n }\n \n\n}"},{"recid":17,"SCRIPTID":"1006","SCRIPTNAME":"Examplecss","CONTENT":"table .tina4grid {\n .rowselected {\n   background: yellow;\n }\n \n\n \n\n}\n\n .rowhover {\n   background: red;\n }"}]}